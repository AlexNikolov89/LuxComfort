(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[678],{357664:function(e,o,t){var n={"./list-item-text-de.json":14587,"./list-item-text-es.json":600331,"./list-item-text-fr.json":333638,"./list-item-text-ja.json":198038,"./list-item-text-pt.json":345161,"./list-item-text-ru.json":294685,"./list-item-text-zh.json":339891,"./list-item-text.json":888496,"docs/translations/api-docs/list-item-text/list-item-text-de.json":14587,"docs/translations/api-docs/list-item-text/list-item-text-es.json":600331,"docs/translations/api-docs/list-item-text/list-item-text-fr.json":333638,"docs/translations/api-docs/list-item-text/list-item-text-ja.json":198038,"docs/translations/api-docs/list-item-text/list-item-text-pt.json":345161,"docs/translations/api-docs/list-item-text/list-item-text-ru.json":294685,"docs/translations/api-docs/list-item-text/list-item-text-zh.json":339891,"docs/translations/api-docs/list-item-text/list-item-text.json":888496};function s(e){var o=r(e);return t(o)}function r(e){if(!t.o(n,e)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n[e]}s.keys=function(){return Object.keys(n)},s.resolve=r,e.exports=s,s.id=357664},672022:function(e,o,t){"use strict";t.r(o),t.d(o,{default:function(){return i}});t(827378);var n=t(465702),s=t(760141),r=JSON.parse('{"props":{"children":{"type":{"name":"node"}},"classes":{"type":{"name":"object"}},"disableTypography":{"type":{"name":"bool"}},"inset":{"type":{"name":"bool"}},"primary":{"type":{"name":"node"}},"primaryTypographyProps":{"type":{"name":"object"}},"secondary":{"type":{"name":"node"}},"secondaryTypographyProps":{"type":{"name":"object"}},"sx":{"type":{"name":"object"}}},"name":"ListItemText","styles":{"classes":["root","multiline","dense","inset","primary","secondary"],"globalClasses":{},"name":"MuiListItemText"},"spread":true,"forwardsRefTo":"HTMLDivElement","filename":"/packages/mui-material/src/ListItemText/ListItemText.js","inheritance":null,"demos":"<ul><li><a href=\\"/components/lists/\\">Lists</a></li></ul>","cssComponent":false}'),a=t(824246);function i(e){var o=e.descriptions,t=e.pageContent;return(0,a.jsx)(n.Z,{descriptions:o,pageContent:t})}i.getInitialProps=function(){var e=t(357664);return{descriptions:(0,s.Z)(e),pageContent:r}}},219117:function(e,o,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/api-docs/list-item-text",function(){return t(672022)}])},14587:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":"Alias for the <code>primary</code> prop.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","disableTypography":"If <code>true</code>, the children won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>children</code> (or <code>primary</code>) text, and optional <code>secondary</code> text with the Typography component.","inset":"If <code>true</code>, the children are indented. This should be used if there is no left avatar or left icon.","primary":"The main content element.","primaryTypographyProps":"These props will be forwarded to the primary typography component (as long as disableTypography is not <code>true</code>).","secondary":"The secondary content element.","secondaryTypographyProps":"These props will be forwarded to the secondary typography component (as long as disableTypography is not <code>true</code>).","sx":"Die Einstellung, die das Definieren von \xdcberschreibungen, sowie zus\xe4tzlichen CSS-Styles erlaubt. Weitere Details finden Sie auf der <a href=\\"/system/basics/#the-sx-prop\\">`sx` Seite</a>."},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"multiline":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"primary and secondary are set"},"dense":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"dense"},"inset":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>inset={true}</code>"},"primary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the primary `Typography` component"},"secondary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the secondary `Typography` component"}}}')},600331:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":"Alias for the <code>primary</code> prop.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","disableTypography":"If <code>true</code>, the children won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>children</code> (or <code>primary</code>) text, and optional <code>secondary</code> text with the Typography component.","inset":"If <code>true</code>, the children are indented. This should be used if there is no left avatar or left icon.","primary":"The main content element.","primaryTypographyProps":"These props will be forwarded to the primary typography component (as long as disableTypography is not <code>true</code>).","secondary":"The secondary content element.","secondaryTypographyProps":"These props will be forwarded to the secondary typography component (as long as disableTypography is not <code>true</code>).","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/basics/#the-sx-prop\\">`sx` page</a> for more details."},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"multiline":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"primary and secondary are set"},"dense":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"dense"},"inset":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>inset={true}</code>"},"primary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the primary `Typography` component"},"secondary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the secondary `Typography` component"}}}')},333638:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":"Alias for the <code>primary</code> prop.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","disableTypography":"If <code>true</code>, the children won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>children</code> (or <code>primary</code>) text, and optional <code>secondary</code> text with the Typography component.","inset":"If <code>true</code>, the children are indented. This should be used if there is no left avatar or left icon.","primary":"The main content element.","primaryTypographyProps":"These props will be forwarded to the primary typography component (as long as disableTypography is not <code>true</code>).","secondary":"The secondary content element.","secondaryTypographyProps":"These props will be forwarded to the secondary typography component (as long as disableTypography is not <code>true</code>).","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/basics/#the-sx-prop\\">`sx` page</a> for more details."},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"multiline":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"primary and secondary are set"},"dense":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"dense"},"inset":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>inset={true}</code>"},"primary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the primary `Typography` component"},"secondary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the secondary `Typography` component"}}}')},198038:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":"Alias for the <code>primary</code> prop.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","disableTypography":"If <code>true</code>, the children won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>children</code> (or <code>primary</code>) text, and optional <code>secondary</code> text with the Typography component.","inset":"If <code>true</code>, the children are indented. This should be used if there is no left avatar or left icon.","primary":"The main content element.","primaryTypographyProps":"These props will be forwarded to the primary typography component (as long as disableTypography is not <code>true</code>).","secondary":"The secondary content element.","secondaryTypographyProps":"These props will be forwarded to the secondary typography component (as long as disableTypography is not <code>true</code>).","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/basics/#the-sx-prop\\">`sx` page</a> for more details."},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"multiline":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"primary and secondary are set"},"dense":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"dense"},"inset":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>inset={true}</code>"},"primary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the primary `Typography` component"},"secondary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the secondary `Typography` component"}}}')},345161:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":"Alias for the <code>primary</code> prop.","classes":"Sobrescreve ou extende os estilos aplicados para o componente. Veja a <a href=\\"#css\\">API CSS</a> abaixo para maiores detalhes.","disableTypography":"If <code>true</code>, the children won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>children</code> (or <code>primary</code>) text, and optional <code>secondary</code> text with the Typography component.","inset":"If <code>true</code>, the children are indented. This should be used if there is no left avatar or left icon.","primary":"The main content element.","primaryTypographyProps":"These props will be forwarded to the primary typography component (as long as disableTypography is not <code>true</code>).","secondary":"The secondary content element.","secondaryTypographyProps":"These props will be forwarded to the secondary typography component (as long as disableTypography is not <code>true</code>).","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/basics/#the-sx-prop\\">`sx` page</a> for more details."},"classDescriptions":{"root":{"description":"Estilos aplicados ao elemento raiz."},"multiline":{"description":"Estilos aplicados para {{nodeName}} se {{conditions}}.","nodeName":"the Typography component","conditions":"primary and secondary are set"},"dense":{"description":"Estilos aplicados para {{nodeName}} se {{conditions}}.","nodeName":"the Typography component","conditions":"dense"},"inset":{"description":"Estilos aplicados para {{nodeName}} se {{conditions}}.","nodeName":"o elemento raiz","conditions":"<code>inset={true}</code>"},"primary":{"description":"Estilos aplicados a {{nodeName}}.","nodeName":"the primary `Typography` component"},"secondary":{"description":"Estilos aplicados a {{nodeName}}.","nodeName":"the secondary `Typography` component"}}}')},294685:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":"Alias for the <code>primary</code> prop.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","disableTypography":"If <code>true</code>, the children won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>children</code> (or <code>primary</code>) text, and optional <code>secondary</code> text with the Typography component.","inset":"If <code>true</code>, the children are indented. This should be used if there is no left avatar or left icon.","primary":"The main content element.","primaryTypographyProps":"These props will be forwarded to the primary typography component (as long as disableTypography is not <code>true</code>).","secondary":"The secondary content element.","secondaryTypographyProps":"These props will be forwarded to the secondary typography component (as long as disableTypography is not <code>true</code>).","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/basics/#the-sx-prop\\">`sx` page</a> for more details."},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"multiline":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"primary and secondary are set"},"dense":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"dense"},"inset":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>inset={true}</code>"},"primary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the primary `Typography` component"},"secondary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the secondary `Typography` component"}}}')},339891:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":"Alias for the <code>primary</code> prop.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","disableTypography":"If <code>true</code>, the children won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>children</code> (or <code>primary</code>) text, and optional <code>secondary</code> text with the Typography component.","inset":"If <code>true</code>, the children are indented. This should be used if there is no left avatar or left icon.","primary":"The main content element.","primaryTypographyProps":"These props will be forwarded to the primary typography component (as long as disableTypography is not <code>true</code>).","secondary":"The secondary content element.","secondaryTypographyProps":"These props will be forwarded to the secondary typography component (as long as disableTypography is not <code>true</code>).","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/basics/#the-sx-prop\\">`sx` page</a> for more details."},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"multiline":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"primary and secondary are set"},"dense":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"dense"},"inset":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>inset={true}</code>"},"primary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the primary `Typography` component"},"secondary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the secondary `Typography` component"}}}')},888496:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"children":"Alias for the <code>primary</code> prop.","classes":"Override or extend the styles applied to the component. See <a href=\\"#css\\">CSS API</a> below for more details.","disableTypography":"If <code>true</code>, the children won&#39;t be wrapped by a Typography component. This can be useful to render an alternative Typography variant by wrapping the <code>children</code> (or <code>primary</code>) text, and optional <code>secondary</code> text with the Typography component.","inset":"If <code>true</code>, the children are indented. This should be used if there is no left avatar or left icon.","primary":"The main content element.","primaryTypographyProps":"These props will be forwarded to the primary typography component (as long as disableTypography is not <code>true</code>).","secondary":"The secondary content element.","secondaryTypographyProps":"These props will be forwarded to the secondary typography component (as long as disableTypography is not <code>true</code>).","sx":"The system prop that allows defining system overrides as well as additional CSS styles. See the <a href=\\"/system/the-sx-prop/\\">`sx` page</a> for more details."},"classDescriptions":{"root":{"description":"Styles applied to the root element."},"multiline":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"primary and secondary are set"},"dense":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the Typography component","conditions":"dense"},"inset":{"description":"Styles applied to {{nodeName}} if {{conditions}}.","nodeName":"the root element","conditions":"<code>inset={true}</code>"},"primary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the primary `Typography` component"},"secondary":{"description":"Styles applied to {{nodeName}}.","nodeName":"the secondary `Typography` component"}}}')}},function(e){e.O(0,[1622,8622,8272,5408,6950,3338,1353,7423,2245,2790,4921,8662,9596,994,5505,2853,274,7506,7418,8691,9774,2888,179],(function(){return o=219117,e(e.s=o);var o}));var o=e.O();_N_E=o}]);