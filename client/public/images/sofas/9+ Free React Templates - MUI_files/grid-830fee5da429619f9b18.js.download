(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[891],{266726:function(n,e,a){var t=a(911611),i=a(882846),o=a(491936),s=Math.max,r=Math.min;n.exports=function(n,e,a){var l,c,d,p,m,u,h=0,g=!1,x=!1,f=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function y(e){var a=l,t=c;return l=c=void 0,h=e,p=n.apply(t,a)}function v(n){return h=n,m=setTimeout(k,e),g?y(n):p}function b(n){var a=n-u;return void 0===u||a>=e||a<0||x&&n-h>=d}function k(){var n=i();if(b(n))return G(n);m=setTimeout(k,function(n){var a=e-(n-u);return x?r(a,d-(n-h)):a}(n))}function G(n){return m=void 0,f&&l?y(n):(l=c=void 0,p)}function w(){var n=i(),a=b(n);if(l=arguments,c=this,u=n,a){if(void 0===m)return v(u);if(x)return clearTimeout(m),m=setTimeout(k,e),y(u)}return void 0===m&&(m=setTimeout(k,e)),p}return e=o(e)||0,t(a)&&(g=!!a.leading,d=(x="maxWait"in a)?s(o(a.maxWait)||0,e):d,f="trailing"in a?!!a.trailing:f),w.cancel=function(){void 0!==m&&clearTimeout(m),h=0,l=u=c=m=void 0},w.flush=function(){return void 0===m?p:G(i())},w}},882846:function(n,e,a){var t=a(377400);n.exports=function(){return t.Date.now()}},819783:function(n,e,a){var t=a(266726),i=a(911611);n.exports=function(n,e,a){var o=!0,s=!0;if("function"!=typeof n)throw new TypeError("Expected a function");return i(a)&&(o="leading"in a?!!a.leading:o,s="trailing"in a?!!a.trailing:s),t(n,e,{leading:o,maxWait:e,trailing:s})}},895046:function(n,e,a){"use strict";a.r(e),a.d(e,{default:function(){return In}});var t,i,o=a(827378),s=a(461941),r=a(295649),l=a(33283),c=a(896666),d=a(107508),p=a(110614),m=a(824246),u=(0,l.ZP)(d.Z)((function(n){var e=n.theme;return(0,r.Z)((0,r.Z)({},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var h=(0,l.ZP)(d.Z)((function(n){var e=n.theme;return(0,r.Z)((0,r.Z)({},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var g,x,f=a(79952),y=a(292806),v=a(233939),b=a(637464),k=a(253350),G=a(831493),w=a(992316);var j,I,C,P,Z,S,R,T,B,F,A,L,W,q,z,D,M,_,H,N,E=a(675453),V=a.n(E),$=(0,l.ZP)(d.Z)((function(n){var e=n.theme;return(0,r.Z)((0,r.Z)({},e.typography.body2),{},{padding:e.spacing(2),textAlign:"center",color:e.palette.text.secondary})}));var O=(0,l.ZP)(d.Z)((function(n){var e=n.theme;return(0,r.Z)((0,r.Z)({},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var J,Y,U,X,Q=a(903789),K=a(10867),nn=(0,l.ZP)("img")({margin:"auto",display:"block",maxWidth:"100%",maxHeight:"100%"});var en,an,tn,on,sn=(0,l.ZP)(d.Z)((function(n){var e=n.theme;return(0,r.Z)((0,r.Z)({},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var rn,ln=(0,l.ZP)(d.Z)((function(n){var e=n.theme;return(0,r.Z)((0,r.Z)({},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var cn,dn,pn=(0,l.ZP)(d.Z)((function(n){var e=n.theme;return(0,r.Z)((0,r.Z)({},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var mn,un=(0,l.ZP)(d.Z)((function(n){var e=n.theme;return(0,r.Z)((0,r.Z)({},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));function hn(){return cn||(cn=(0,m.jsxs)(o.Fragment,{children:[(0,m.jsx)(p.ZP,{item:!0,xs:4,children:(0,m.jsx)(un,{children:"Item"})}),(0,m.jsx)(p.ZP,{item:!0,xs:4,children:(0,m.jsx)(un,{children:"Item"})}),(0,m.jsx)(p.ZP,{item:!0,xs:4,children:(0,m.jsx)(un,{children:"Item"})})]}))}var gn=(0,l.ZP)(d.Z)((function(n){var e=n.theme;return(0,r.Z)((0,r.Z)({},e.typography.body2),{},{padding:e.spacing(1),textAlign:"center",color:e.palette.text.secondary})}));var xn,fn,yn,vn=a(78459),bn="Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. ";const kn={en:{description:"The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.",location:"/docs/src/pages/components/grid/grid.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Grid</h1><p class="description">The Material Design responsive layout grid adapts to screen size and orientation, ensuring consistency across layouts.</p>\n\n<p>The <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">grid</a> creates visual consistency between layouts while allowing flexibility across a wide variety of designs.\nMaterial Design&#39;s responsive UI is based on a 12-column grid layout.</p>\n',{component:"modules/components/ComponentLinkHeader.js",design:!1},'<blockquote>\n<p>\u26a0\ufe0f The <code>Grid</code> component shouldn&#39;t be confused with a data grid; it is closer to a layout grid. For a data grid head to <a href="/components/data-grid/">the <code>DataGrid</code> component</a>.</p>\n</blockquote>\n<h2 id="heading-how-it-works"><span class="anchor-link" id="how-it-works"></span>How it works<a aria-labelledby="heading-how-it-works" class="anchor-link-style" href="#how-it-works" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The grid system is implemented with the <code>Grid</code> component:</p>\n<ul>\n<li>It uses <a href="https://www.w3.org/TR/css-flexbox-1/" target="_blank" rel="noopener nofollow">CSS&#39;s Flexible Box module</a> for high flexibility.</li>\n<li>There are two types of layout: <em>containers</em> and <em>items</em>.</li>\n<li>Item widths are set in percentages, so they&#39;re always fluid and sized relative to their parent element.</li>\n<li>Items have padding to create the spacing between individual items.</li>\n<li>There are five grid breakpoints: xs, sm, md, lg, and xl.</li>\n<li>Integer values can be given to each breakpoint, indicating how many of the 12 available columns are occupied by the component when the viewport width satisfies the <a href="/customization/breakpoints/#default-breakpoints">breakpoint contraints</a>.</li>\n</ul>\n<p>If you are <strong>new to or unfamiliar with flexbox</strong>, we encourage you to read this <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS-Tricks flexbox</a> guide.</p>\n<h2 id="heading-fluid-grids"><span class="anchor-link" id="fluid-grids"></span>Fluid grids<a aria-labelledby="heading-fluid-grids" class="anchor-link-style" href="#fluid-grids" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Fluid grids use columns that scale and resize content. A fluid grid&#39;s layout can use breakpoints to determine if the layout needs to change dramatically.</p>\n<h3 id="heading-basic-grid"><span class="anchor-link" id="basic-grid"></span>Basic grid<a aria-labelledby="heading-basic-grid" class="anchor-link-style" href="#basic-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Column widths are integer values between 1 and 12; they apply at any breakpoint and indicate how many columns are occupied by the component.</p>\n<p>A value given to a breakpoint applies to all the other breakpoints wider than it (unless overridden, as you can read later in this page). For example, <code>xs={12}</code> sizes a component to occupy the whole viewport width regardless of its size.</p>\n',{demo:"pages/components/grid/BasicGrid.js",bg:!0},'<h3 id="heading-grid-with-multiple-breakpoints"><span class="anchor-link" id="grid-with-multiple-breakpoints"></span>Grid with multiple breakpoints<a aria-labelledby="heading-grid-with-multiple-breakpoints" class="anchor-link-style" href="#grid-with-multiple-breakpoints" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Components may have multiple widths defined, causing the layout to change at the defined breakpoint. Width values given to larger breakpoints override those given to smaller breakpoints.</p>\n<p>For example, <code>xs={12} sm={6}</code> sizes a component to occupy half of the viewport width (6 columns) when viewport width is <a href="/customization/breakpoints/#default-breakpoints">600 or more pixels</a>. For smaller viewports, the component fills all 12 available columns.</p>\n',{demo:"pages/components/grid/FullWidthGrid.js",bg:!0},'<h2 id="heading-spacing"><span class="anchor-link" id="spacing"></span>Spacing<a aria-labelledby="heading-spacing" class="anchor-link-style" href="#spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To control space between children, use the <code>spacing</code> prop.\nThe spacing value can be any positive number, including decimals and any string.\nThe prop is converted into a CSS property using the <a href="/customization/spacing/"><code>theme.spacing()</code></a> helper.</p>\n',{demo:"pages/components/grid/SpacingGrid.js",bg:!0},'<h3 id="heading-row-amp-column-spacing"><span class="anchor-link" id="row-amp-column-spacing"></span>Row &amp; column spacing<a aria-labelledby="heading-row-amp-column-spacing" class="anchor-link-style" href="#row-amp-column-spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>rowSpacing</code> and <code>columnSpacing</code> props allow for specifying the row and column gaps independently.\nIt&#39;s similar to the <code>row-gap</code> and <code>column-gap</code> properties of <a href="/system/grid/#row-gap-amp-column-gap">CSS Grid</a>.</p>\n',{demo:"pages/components/grid/RowAndColumnSpacing.js",bg:!0},'<h2 id="heading-responsive-values"><span class="anchor-link" id="responsive-values"></span>Responsive values<a aria-labelledby="heading-responsive-values" class="anchor-link-style" href="#responsive-values" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can switch the props&#39; value based on the active breakpoint.\nFor instance, we can implement the <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">&quot;recommended&quot;</a> responsive layout grid of Material Design.</p>\n',{demo:"pages/components/grid/ResponsiveGrid.js",bg:!0},'<p>Responsive values is supported by:</p>\n<ul>\n<li><code>columns</code></li>\n<li><code>columnSpacing</code></li>\n<li><code>direction</code></li>\n<li><code>rowSpacing</code></li>\n<li><code>spacing</code></li>\n<li>all the <a href="#system-props">other props</a> of the system</li>\n</ul>\n<blockquote>\n<p>\u26a0\ufe0f When using a responsive <code>columns</code> prop, each grid item needs its corresponding breakpoint.\nFor instance, this is not working. The grid item misses the value for <code>md</code>:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">container</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> xs<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> md<span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n</code></pre>\n</blockquote>\n<h2 id="heading-interactive"><span class="anchor-link" id="interactive"></span>Interactive<a aria-labelledby="heading-interactive" class="anchor-link-style" href="#interactive" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Below is an interactive demo that lets you explore the visual results of the different settings:</p>\n',{demo:"pages/components/grid/InteractiveGrid.js",hideToolbar:!0,bg:!0},'<h2 id="heading-auto-layout"><span class="anchor-link" id="auto-layout"></span>Auto-layout<a aria-labelledby="heading-auto-layout" class="anchor-link-style" href="#auto-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The Auto-layout makes the <em>items</em> equitably share the available space.\nThat also means you can set the width of one <em>item</em> and the others will automatically resize around it.</p>\n',{demo:"pages/components/grid/AutoGrid.js",bg:!0},'<h3 id="heading-variable-width-content"><span class="anchor-link" id="variable-width-content"></span>Variable width content<a aria-labelledby="heading-variable-width-content" class="anchor-link-style" href="#variable-width-content" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Set one of the size breakpoint props to <code>&quot;auto&quot;</code> instead of <code>true</code> / a <code>number</code> to size\na column based on the natural width of its content.</p>\n',{demo:"pages/components/grid/VariableWidthGrid.js",bg:!0},'<h2 id="heading-complex-grid"><span class="anchor-link" id="complex-grid"></span>Complex Grid<a aria-labelledby="heading-complex-grid" class="anchor-link-style" href="#complex-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The following demo doesn&#39;t follow the Material Design guidelines, but illustrates how the grid can be used to build complex layouts.</p>\n',{demo:"pages/components/grid/ComplexGrid.js",bg:!0},'<h2 id="heading-nested-grid"><span class="anchor-link" id="nested-grid"></span>Nested Grid<a aria-labelledby="heading-nested-grid" class="anchor-link-style" href="#nested-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>container</code> and <code>item</code> props are two independent booleans; they can be combined to allow a Grid component to be both a flex container and child.</p>\n<blockquote>\n<p>A flex <strong>container</strong> is the box generated by an element with a computed display of <code>flex</code> or <code>inline-flex</code>. In-flow children of a flex container are called flex <strong>items</strong> and are laid out using the flex layout model.</p>\n</blockquote>\n<p><a href="https://www.w3.org/TR/css-flexbox-1/#box-model" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/css-flexbox-1/#box-model</a></p>\n',{demo:"pages/components/grid/NestedGrid.js",bg:!0},'<p>\u26a0\ufe0f Defining an explicit width to a Grid element that is flex container, flex item, and has spacing at the same time lead to unexpected behavior, avoid doing it:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">spacing</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">container</span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<p>If you need to do such, remove one of the props.</p>\n<h2 id="heading-columns"><span class="anchor-link" id="columns"></span>Columns<a aria-labelledby="heading-columns" class="anchor-link-style" href="#columns" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can change the default number of columns (12) with the <code>columns</code> prop.</p>\n',{demo:"pages/components/grid/ColumnsGrid.js",bg:!0},'<h2 id="heading-limitations"><span class="anchor-link" id="limitations"></span>Limitations<a aria-labelledby="heading-limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-negative-margin"><span class="anchor-link" id="negative-margin"></span>Negative margin<a aria-labelledby="heading-negative-margin" class="anchor-link-style" href="#negative-margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The spacing between items is implemented with a negative margin. This might lead to unexpected behaviors. For instance, to apply a background color, you need to apply <code>display: flex;</code> to the parent.</p>\n<h3 id="heading-white-space-nowrap"><span class="anchor-link" id="white-space-nowrap"></span>white-space: nowrap;<a aria-labelledby="heading-white-space-nowrap" class="anchor-link-style" href="#white-space-nowrap" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The initial setting on flex items is <code>min-width: auto</code>.\nIt&#39;s causing a positioning conflict when the children is using <code>white-space: nowrap;</code>.\nYou can experience the issue with:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>In order for the item to stay within the container you need to set <code>min-width: 0</code>.\nIn practice, you can set the <code>zeroMinWidth</code> prop:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span> <span class="token attr-name">zeroMinWidth</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n',{demo:"pages/components/grid/AutoGridNoWrap.js",bg:!0},'<h3 id="heading-direction-column-column-reverse"><span class="anchor-link" id="direction-column-column-reverse"></span>direction: column | column-reverse<a aria-labelledby="heading-direction-column-column-reverse" class="anchor-link-style" href="#direction-column-column-reverse" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code> props are <strong>not supported</strong> within <code>direction=&quot;column&quot;</code> and <code>direction=&quot;column-reverse&quot;</code> containers.</p>\n<p>They define the number of grids the component will use for a given breakpoint. They are intended to control <strong>width</strong> using <code>flex-basis</code> in <code>row</code> containers but they will impact height in <code>column</code> containers.\nIf used, these props may have undesirable effects on the height of the <code>Grid</code> item elements.</p>\n<h2 id="heading-css-grid-layout"><span class="anchor-link" id="css-grid-layout"></span>CSS Grid Layout<a aria-labelledby="heading-css-grid-layout" class="anchor-link-style" href="#css-grid-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Grid</code> component is using CSS flexbox internally.\nBut as seen below, you can easily use <a href="/system/grid/">the system</a> and CSS Grid to layout your pages.</p>\n',{demo:"pages/components/grid/CSSGrid.js",bg:!0},'<h2 id="heading-system-props"><span class="anchor-link" id="system-props"></span>System props<a aria-labelledby="heading-system-props" class="anchor-link-style" href="#system-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As a CSS utility component, the <code>Grid</code> supports all <a href="/system/properties/"><code>system</code></a> properties. You can use them as props directly on the component.\nFor instance, a padding:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">p</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n','<h2 id="heading-api"><span class="anchor-link" id="api"></span>API<a aria-labelledby="heading-api" class="anchor-link-style" href="#api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/api/grid/"><code>&lt;Grid /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"How it works",level:2,hash:"how-it-works",children:[]},{text:"Fluid grids",level:2,hash:"fluid-grids",children:[{text:"Basic grid",level:3,hash:"basic-grid"},{text:"Grid with multiple breakpoints",level:3,hash:"grid-with-multiple-breakpoints"}]},{text:"Spacing",level:2,hash:"spacing",children:[{text:"Row &amp; column spacing",level:3,hash:"row-amp-column-spacing"}]},{text:"Responsive values",level:2,hash:"responsive-values",children:[]},{text:"Interactive",level:2,hash:"interactive",children:[]},{text:"Auto-layout",level:2,hash:"auto-layout",children:[{text:"Variable width content",level:3,hash:"variable-width-content"}]},{text:"Complex Grid",level:2,hash:"complex-grid",children:[]},{text:"Nested Grid",level:2,hash:"nested-grid",children:[]},{text:"Columns",level:2,hash:"columns",children:[]},{text:"Limitations",level:2,hash:"limitations",children:[{text:"Negative margin",level:3,hash:"negative-margin"},{text:"white-space: nowrap;",level:3,hash:"white-space-nowrap"},{text:"direction: column | column-reverse",level:3,hash:"direction-column-column-reverse"}]},{text:"CSS Grid Layout",level:2,hash:"css-grid-layout",children:[]},{text:"System props",level:2,hash:"system-props",children:[]},{text:"API",level:2,hash:"api",children:[]}],title:"React Grid component",headers:{title:"React Grid component",components:["Grid"],githubLabel:"component: Grid",materialDesign:"https://material.io/design/layout/understanding-layout.html"}},pt:{description:"O leiaute responsivo da grade do Material Design se adapta ao tamanho e orienta\xe7\xe3o da tela, garantindo a consist\xeancia entre leiautes.",location:"/docs/src/pages/components/grid/grid-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Grade</h1><p class="description">O leiaute responsivo da grade do Material Design se adapta ao tamanho e orienta\xe7\xe3o da tela, garantindo a consist\xeancia entre leiautes.</p>\n\n<p>Uma <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">grade</a> cria consist\xeancia visual entre leiautes, enquanto permite flexibilidade em uma ampla variedade de projetos. A UI responsiva do Material Design \xe9 baseada em uma grade de 12 colunas.</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<blockquote>\n<p>O componente <code>Grid</code> n\xe3o deve ser confundido com um data grid; ele est\xe1 mais pr\xf3ximo de um layout grid. Para um cabe\xe7alho do data grid para <a href="/pt/components/data-grid/">o componente <code>DataGrid</code></a>.</p>\n</blockquote>\n<h2 id="heading-how-it-works"><span class="anchor-link" id="how-it-works"></span>Como funciona<a aria-labelledby="heading-how-it-works" class="anchor-link-style" href="#how-it-works" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>O sistema de grade \xe9 implementado com o componente <code>Grid</code>:</p>\n<ul>\n<li>Ela usa <a href="https://www.w3.org/TR/css-flexbox-1/" target="_blank" rel="noopener nofollow">o m\xf3dulo CSS de box flex\xedvel</a> para alta flexibilidade.</li>\n<li>Existem dois tipos de leiautes: <em>cont\xeaineres</em> e <em>itens</em>.</li>\n<li>Larguras de itens s\xe3o definidas em porcentagens, desse modo s\xe3o sempre fluidas e dimensionadas de acordo os seus elementos pai.</li>\n<li>Itens t\xeam preenchimento para criar o espa\xe7amento entre itens individuais.</li>\n<li>Existem cinco pontos de quebra (breakpoints) na grade: xs, sm, md, lg e xl.</li>\n<li>Valores inteiros podem ser dados para cada ponto de quebra,  indicando quantas das 12 colunas dispon\xedveis s\xe3o ocupadas pelo componente quando a largura da \xe1rea de exibi\xe7\xe3o satisfaz as <a href="/pt/customization/breakpoints/#default-breakpoints">restri\xe7\xf5es de ponto de quebra</a>.</li>\n</ul>\n<p>Se voc\xea \xe9 <strong>novo ou n\xe3o est\xe1 familiarizado com o flexbox</strong>, n\xf3s recomendamos voc\xea a ler este <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">guia do Flexbox CSS-Tricks</a>.</p>\n<h2 id="heading-fluid-grids"><span class="anchor-link" id="fluid-grids"></span>Grades flu\xeddas<a aria-labelledby="heading-fluid-grids" class="anchor-link-style" href="#fluid-grids" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As grades flu\xeddas usam colunas que dimensionam e redimensionam o conte\xfado. Uma disposi\xe7\xe3o fluida de malha pode usar pontos de ruptura para determinar se precisa mudar drasticamente.</p>\n<h3 id="heading-basic-grid"><span class="anchor-link" id="basic-grid"></span>Grade b\xe1sica<a aria-labelledby="heading-basic-grid" class="anchor-link-style" href="#basic-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>As larguras das colunas \xe9 representada por  um numero inteiro que varia de  1 a 12. Podemos aplica-las a qualquer ponto de ruptura para indicar quantas colunas s\xe3o ocupadas pelo componente.</p>\n<p>Um valor aplicado a um ponto de ruptura se aplica a todos os outros pontos maiores, a menos que seja alterado, como ser\xe1 visto posteriormente nesta p\xe1gina. Por exemplo nesse trecho <code>xs={12}</code> definimos que o componente ocupar\xe1 toda a largura da tela, independente do tamanho da tela.</p>\n',{demo:"pages/components/grid/BasicGrid.js",bg:!0},'<h3 id="heading-grid-with-multiple-breakpoints"><span class="anchor-link" id="grid-with-multiple-breakpoints"></span>Grade com pontos de quebra<a aria-labelledby="heading-grid-with-multiple-breakpoints" class="anchor-link-style" href="#grid-with-multiple-breakpoints" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Podemos definir v\xe1rias larguras para os componentes, resultando em um leiaute que muda de acordo com o ponto de ruptura. Width values given to larger breakpoints override those given to smaller breakpoints.</p>\n<p>Aqui por exemplo <code>xs={12} sm={6}</code> define que o componente ocupar\xe1 metade da largura da tela (6 colunas) em um dispositivo com resolu\xe7\xe3o de 600px pra cima. J\xe1 para dispositivos menores, o componente vai tomar todas as 12 colunas.</p> </p>\n',{demo:"pages/components/grid/FullWidthGrid.js",bg:!0},'<h2 id="heading-spacing"><span class="anchor-link" id="spacing"></span>Espa\xe7amento<a aria-labelledby="heading-spacing" class="anchor-link-style" href="#spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Para controlar o espa\xe7o entre os filhos, use a prop <code>spacing</code> O valor do espa\xe7amento pode ser qualquer numero positivo, incluindo decimais e at\xe9 strings (cadeia de caracteres) As props s\xe3o convertidas em css usando o auxiliar  <a href="/pt/customization/spacing/"><code>theme.spacing()</code></a> </p>\n',{demo:"pages/components/grid/SpacingGrid.js",bg:!0},'<h2 id="heading-row-amp-column-spacing"><span class="anchor-link" id="row-amp-column-spacing"></span>Valores responsivos<a aria-labelledby="heading-row-amp-column-spacing" class="anchor-link-style" href="#row-amp-column-spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Podemos ativar as props de acordo com ponto de ruptura ativo Por exemplo, podemos  implementar o leiaute responsivo do Material Design <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">&quot;recommended&quot;</a></p>\n',{demo:"pages/components/grid/ResponsiveGrid.js",bg:!0},'<p>Valores responsivos s\xe3o suportados por:</p>\n<ul>\n<li><code>colunas</code></li>\n<li><code>espa\xe7oDeColuna</code></li>\n<li><code>dire\xe7\xe3o</code></li>\n<li><code>espa\xe7oDeLinha</code></li>\n<li><code>spacing</code></li>\n<li>todas as outras propriedades do sistema <a href="#system-props">other props</a></li>\n</ul>\n<blockquote>\n<p>\u26a0\ufe0f Quando Usamos a prop de c\xf3digo responsivo <code>colunas </code>, cada item da manha precisa de seu correspondente ponto de ruptura. Por exemplo, este n\xe3o est\xe1 funcionando Os itens da malha precisa de seu valor para <code> md</code> (ponto m\xe9dio)</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">container</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> xs<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> md<span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n</code></pre>\n</blockquote>\n<h3 id="heading-responsive-values"><span class="anchor-link" id="responsive-values"></span>Row &amp; column spacing<a aria-labelledby="heading-responsive-values" class="anchor-link-style" href="#responsive-values" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>As props <code> rowSpacing</code> e <code>columnSpacing</code> nos permite especificar os espa\xe7os entre linhas e entre colunas de forma independente. \xc9 similar  as propriedades <code>row-gap</code> e  <code>column-gap</code> da <a href="/pt/system/grid/#row-gap-amp-column-gap">Malha CSS</a>.</p>\n',{demo:"pages/components/grid/RowAndColumnSpacing.js",bg:!0},'<h2 id="heading-interactive"><span class="anchor-link" id="interactive"></span>Interativo<a aria-labelledby="heading-interactive" class="anchor-link-style" href="#interactive" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Abaixo est\xe1 uma demonstra\xe7\xe3o interativa que permite explorar os resultados visuais das diferentes configura\xe7\xf5es:</p>\n',{demo:"pages/components/grid/InteractiveGrid.js",hideToolbar:!0,bg:!0},'<h2 id="heading-auto-layout"><span class="anchor-link" id="auto-layout"></span>Leiaute Autom\xe1tico<a aria-labelledby="heading-auto-layout" class="anchor-link-style" href="#auto-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>O leiaute autom\xe1tico faz com que o espa\xe7o dispon\xedvel seja compartilhado de forma proporcional  <em>items</em> Isso tamb\xe9m quer dizer que podemos definir que a largura de um <em>item</em> se ajustar\xe1 automaticamente ao redor dele</p>\n',{demo:"pages/components/grid/AutoGrid.js",bg:!0},'<h2 id="heading-variable-width-content"><span class="anchor-link" id="variable-width-content"></span>Grade Complexa<a aria-labelledby="heading-variable-width-content" class="anchor-link-style" href="#variable-width-content" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>A demo a seguir n\xe3o segue as normas do Material Design mas ilustra bem como a malha pode ser usada para criar layouts complexos</p>\n',{demo:"pages/components/grid/ComplexGrid.js",bg:!0},'<h2 id="heading-complex-grid"><span class="anchor-link" id="complex-grid"></span>Grade Aninhada<a aria-labelledby="heading-complex-grid" class="anchor-link-style" href="#complex-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As props <code>container</code> e <code>item</code>  s\xe3o buleanas independentes; Podemo ser combinados para permitir que um componente Grid seja tanto um cont\xeainer flex como um filho (item do cont\xeainer)</p>\n<blockquote>\n<p>A flex <strong>container</strong> is the box generated by an element with a computed display of <code>flex</code> or <code>inline-flex</code>. In-flow children of a flex container are called flex <strong>items</strong> and are laid out using the flex layout model.</p>\n</blockquote>\n<p><a href="https://www.w3.org/TR/css-flexbox-1/#box-model" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/css-flexbox-1/#box-model</a></p>\n',{demo:"pages/components/grid/NestedGrid.js",bg:!0},'<p>\u26a0\ufe0f Defining an explicit width to a Grid element that is flex container, flex item, and has spacing at the same time lead to unexpected behavior, avoid doing it:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">spacing</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">container</span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<p>If you need to do such, remove one of the props.</p>\n<h2 id="heading-nested-grid"><span class="anchor-link" id="nested-grid"></span>Colunas<a aria-labelledby="heading-nested-grid" class="anchor-link-style" href="#nested-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can change the default number of columns (12) with the <code>columns</code> prop.</p>\n',{demo:"pages/components/grid/ColumnsGrid.js",bg:!0},'<h2 id="heading-columns"><span class="anchor-link" id="columns"></span>Limita\xe7\xf5es<a aria-labelledby="heading-columns" class="anchor-link-style" href="#columns" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-limitations"><span class="anchor-link" id="limitations"></span>Margem negativa<a aria-labelledby="heading-limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The spacing between items is implemented with a negative margin. This might lead to unexpected behaviors. For instance, to apply a background color, you need to apply <code>display: flex;</code> to the parent.</p>\n<h3 id="heading-negative-margin"><span class="anchor-link" id="negative-margin"></span>white-space: nowrap;<a aria-labelledby="heading-negative-margin" class="anchor-link-style" href="#negative-margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>A configura\xe7\xe3o inicial em itens flex\xedveis \xe9 <code>min-width: auto</code>. Isto causa um conflito de posicionamento quando os elementos filhos est\xe3o usando <code>white-space: nowrap</code>. Voc\xea pode enfrentar o problema com:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>Para que o item permane\xe7a dentro do cont\xeainer, voc\xea precisa definir <code>min-width: 0</code>. In practice, you can set the <code>zeroMinWidth</code> prop:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span> <span class="token attr-name">zeroMinWidth</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n',{demo:"pages/components/grid/AutoGridNoWrap.js",bg:!0},'<h3 id="heading-white-space-nowrap"><span class="anchor-link" id="white-space-nowrap"></span>direction: column | column-reverse<a aria-labelledby="heading-white-space-nowrap" class="anchor-link-style" href="#white-space-nowrap" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code> props are <strong>not supported</strong> within <code>direction=&quot;column&quot;</code> and <code>direction=&quot;column-reverse&quot;</code> containers.</p>\n<p>They define the number of grids the component will use for a given breakpoint. They are intended to control <strong>width</strong> using <code>flex-basis</code> in <code>row</code> containers but they will impact height in <code>column</code> containers. If used, these props may have undesirable effects on the height of the <code>Grid</code> item elements.</p>\n<h2 id="heading-direction-column-column-reverse"><span class="anchor-link" id="direction-column-column-reverse"></span>Leiaute de Grade CSS<a aria-labelledby="heading-direction-column-column-reverse" class="anchor-link-style" href="#direction-column-column-reverse" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Grid</code> component is using CSS flexbox internally. But as seen below, you can easily use <a href="/pt/system/grid/">the system</a> and CSS Grid to layout your pages.</p>\n',{demo:"pages/components/grid/CSSGrid.js",bg:!0},'<h2 id="heading-css-grid-layout"><span class="anchor-link" id="css-grid-layout"></span>System props<a aria-labelledby="heading-css-grid-layout" class="anchor-link-style" href="#css-grid-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As a CSS utility component, the <code>Grid</code> supports all <a href="/pt/system/properties/"><code>system</code></a> properties. You can use them as props directly on the component. For instance, a padding:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">p</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n','<h2 id="heading-system-props"><span class="anchor-link" id="system-props"></span>API<a aria-labelledby="heading-system-props" class="anchor-link-style" href="#system-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/pt/api/grid/"><code>&lt;Grid /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"Como funciona",level:2,hash:"how-it-works",children:[]},{text:"Grades flu\xeddas",level:2,hash:"fluid-grids",children:[{text:"Grade b\xe1sica",level:3,hash:"basic-grid"},{text:"Grade com pontos de quebra",level:3,hash:"grid-with-multiple-breakpoints"}]},{text:"Espa\xe7amento",level:2,hash:"spacing",children:[]},{text:"Valores responsivos",level:2,hash:"row-amp-column-spacing",children:[{text:"Row &amp; column spacing",level:3,hash:"responsive-values"}]},{text:"Interativo",level:2,hash:"interactive",children:[]},{text:"Leiaute Autom\xe1tico",level:2,hash:"auto-layout",children:[]},{text:"Grade Complexa",level:2,hash:"variable-width-content",children:[]},{text:"Grade Aninhada",level:2,hash:"complex-grid",children:[]},{text:"Colunas",level:2,hash:"nested-grid",children:[]},{text:"Limita\xe7\xf5es",level:2,hash:"columns",children:[{text:"Margem negativa",level:3,hash:"limitations"},{text:"white-space: nowrap;",level:3,hash:"negative-margin"},{text:"direction: column | column-reverse",level:3,hash:"white-space-nowrap"}]},{text:"Leiaute de Grade CSS",level:2,hash:"direction-column-column-reverse",children:[]},{text:"System props",level:2,hash:"css-grid-layout",children:[]},{text:"API",level:2,hash:"system-props",children:[]}],title:"Componente React Grade",headers:{title:"Componente React Grade",components:["Grid"],githubLabel:"component: Grid",materialDesign:"https://material.io/design/layout/understanding-layout.html"}},zh:{description:"Material Design \u54cd\u5e94\u5f0f\u5e03\u5c40\u7684\u6805\u683c\u53ef\u9002\u5e94\u5c4f\u5e55\u5927\u5c0f\u548c\u65b9\u5411\uff0c\u786e\u4fdd\u5e03\u5c40\u5728\u4e0d\u540c\u5c3a\u5bf8\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002",location:"/docs/src/pages/components/grid/grid-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Grid \u6805\u683c</h1><p class="description">Material Design \u54cd\u5e94\u5f0f\u5e03\u5c40\u7684\u6805\u683c\u53ef\u9002\u5e94\u5c4f\u5e55\u5927\u5c0f\u548c\u65b9\u5411\uff0c\u786e\u4fdd\u5e03\u5c40\u5728\u4e0d\u540c\u5c3a\u5bf8\u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u3002</p>\n\n<p><a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">Grid \u6805\u683c\u7ec4\u4ef6</a> \u80fd\u786e\u4fdd\u4e0d\u540c\u5e03\u5c40\u95f4\u7684\u89c6\u89c9\u5c42\u9762\u7684\u8212\u9002\u611f\uff0c\u540c\u65f6\u5728\u4f17\u591a\u4e0d\u540c\u8bbe\u8ba1\u4e2d\u4fdd\u6301\u7075\u6d3b\u6027\u3002 Material Design \u57fa\u4e8e 12 \u5217\u7684\u7f51\u683c\u5e03\u5c40\u6765\u505a\u5230 UI \u7684\u54cd\u5e94\u5f0f\u3002</p>\n',{component:"modules/components/ComponentLinkHeader.js"},'<blockquote>\n<p>\u26a0\ufe0f <code>\u6805\u683c</code> \u7ec4\u4ef6\u4e0d\u8981\u4e0e\u627f\u8f7d\u5927\u91cf\u6570\u636e\u7684\u8868\u683c\uff08data grid\uff09\u8fdb\u884c\u6df7\u6dc6\uff1b\u8fd9\u4e2a\u7ec4\u4ef6\u66f4\u503e\u5411\u4e8e\u5728\u5e03\u5c40\u4e2d\u4f7f\u7528\u3002 \u5982\u679c\u9700\u4f7f\u7528\u627f\u8f7d\u5927\u91cf\u6570\u636e\u7684\u8868\u683c\uff0c\u8bf7\u770b\u8fd9\u91cc\u7684 <a href="/zh/components/data-grid/"> <code>\u6570\u636e\u8868\u683c</code> \u7ec4\u4ef6</a>\u3002</p>\n</blockquote>\n<h2 id="heading-how-it-works"><span class="anchor-link" id="how-it-works"></span>\u5de5\u4f5c\u539f\u7406<a aria-labelledby="heading-how-it-works" class="anchor-link-style" href="#how-it-works" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u6805\u683c\u7cfb\u7edf\u662f\u901a\u8fc7 <code>Grid</code> \u7ec4\u4ef6\u5b9e\u73b0\u7684\uff1a</p>\n<ul>\n<li>\u5b83\u4f7f\u7528 <a href="https://www.w3.org/TR/css-flexbox-1/" target="_blank" rel="noopener nofollow">CSS \u5f39\u6027\u76d2\u5b50\u6a21\u5757</a> \u6765\u505a\u5230\u9ad8\u5ea6\u7075\u6d3b\u3002</li>\n<li>\u5b83\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u5e03\u5c40\uff1a <em>containers</em> \uff0c _items_\u3002</li>\n<li>\u6bcf\u9879\u7684\u5bbd\u5ea6\u662f\u6309\u767e\u5206\u6bd4\u8bbe\u7f6e\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u7684\u5927\u5c0f\u603b\u662f\u76f8\u5bf9\u4e8e\u5b83\u4eec\u7684\u7236\u5143\u7d20\u6d41\u52a8\u3002</li>\n<li>\u5b50\u9879\u76ee\uff08items\uff09\u4f7f\u7528\u5185\u8fb9\u8ddd\u6765\u4fdd\u6301\u548c\u5176\u4ed6\u5757\uff08items\uff09\u7684\u95f4\u8ddd\u3002</li>\n<li>\u5176\u4e2d\u4e94\u4e2a\u65ad\u70b9\u53ef\u4f9b\u4f7f\u7528\uff1axs\uff0csm\uff0cmd\uff0clg \u548c xl\u3002</li>\n<li>\u4f60\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u65ad\u70b9\u63d0\u4f9b\u6574\u6570\u503c\uff0c\u8868\u793a\u5f53\u89c6\u53e3\u5bbd\u5ea6\u6ee1\u8db3 <a href="/zh/customization/breakpoints/#default-breakpoints">\u65ad\u70b9\u7ea6\u675f</a> \u65f6\uff0c12 \u4e2a\u53ef\u7528\u5217\u4e2d\u6709\u591a\u5c11\u5217\u88ab\u7ec4\u4ef6\u5360\u7528\u3002</li>\n</ul>\n<p>\u82e5\u4f60\u5bf9 <strong>flexbox \u4e0d\u592a\u719f\u6089</strong>\uff0c\u6211\u4eec\u5efa\u8bae\u4f60\u9605\u8bfb <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">CSS-Tricks flexbox</a> \u624b\u518c\u3002</p>\n<h2 id="heading-fluid-grids"><span class="anchor-link" id="fluid-grids"></span>Fluid grids \u6d41\u5f0f\u7f51\u683c<a aria-labelledby="heading-fluid-grids" class="anchor-link-style" href="#fluid-grids" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u6d41\u5f0f\u7f51\u683c\u53ef\u4ee5\u901a\u8fc7\u5217\uff08column\uff09\u6765\u7f29\u653e\u548c\u8c03\u6574\u5185\u5bb9\u7684\u5927\u5c0f\u3002 A fluid grid&#39;s layout can use breakpoints to determine if the layout needs to change dramatically.</p>\n<h3 id="heading-basic-grid"><span class="anchor-link" id="basic-grid"></span>\u57fa\u672c\u6805\u683c<a aria-labelledby="heading-basic-grid" class="anchor-link-style" href="#basic-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Column widths are integer values between 1 and 12; they apply at any breakpoint and indicate how many columns are occupied by the component.</p>\n<p>A value given to a breakpoint applies to all the other breakpoints wider than it (unless overridden, as you can read later in this page). For example, <code>xs={12}</code> sizes a component to occupy the whole viewport width regardless of its size.</p>\n',{demo:"pages/components/grid/BasicGrid.js",bg:!0},'<h3 id="heading-grid-with-multiple-breakpoints"><span class="anchor-link" id="grid-with-multiple-breakpoints"></span>\u6709\u65ad\u70b9\u7684\u6805\u683c<a aria-labelledby="heading-grid-with-multiple-breakpoints" class="anchor-link-style" href="#grid-with-multiple-breakpoints" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Components may have multiple widths defined, causing the layout to change at the defined breakpoint. Width values given to larger breakpoints override those given to smaller breakpoints.</p>\n<p>For example, <code>xs={12} sm={6}</code> sizes a component to occupy half of the viewport width (6 columns) when viewport width is <a href="/zh/customization/breakpoints/#default-breakpoints">600 or more pixels</a>. For smaller viewports, the component fills all 12 available columns.</p>\n',{demo:"pages/components/grid/FullWidthGrid.js",bg:!0},'<h2 id="heading-spacing"><span class="anchor-link" id="spacing"></span>Spacing \u95f4\u8ddd<a aria-labelledby="heading-spacing" class="anchor-link-style" href="#spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>To control space between children, use the <code>spacing</code> prop. The spacing value can be any positive number, including decimals and any string. The prop is converted into a CSS property using the <a href="/zh/customization/spacing/"><code>theme.spacing()</code></a> helper.</p>\n',{demo:"pages/components/grid/SpacingGrid.js",bg:!0},'<h2 id="heading-row-amp-column-spacing"><span class="anchor-link" id="row-amp-column-spacing"></span>\u54cd\u5e94\u5f0f\u7684\u503c<a aria-labelledby="heading-row-amp-column-spacing" class="anchor-link-style" href="#row-amp-column-spacing" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can switch the props&#39; value based on the active breakpoint. For instance, we can implement the <a href="https://material.io/design/layout/responsive-layout-grid.html" target="_blank" rel="noopener nofollow">&quot;recommended&quot;</a> responsive layout grid of Material Design.</p>\n',{demo:"pages/components/grid/ResponsiveGrid.js",bg:!0},'<p>Responsive values is supported by:</p>\n<ul>\n<li><code>columns</code></li>\n<li><code>columnSpacing</code></li>\n<li><code>direction</code></li>\n<li><code>rowSpacing</code></li>\n<li><code>spacing</code></li>\n<li>all the <a href="#system-props">other props</a> of the system</li>\n</ul>\n<blockquote>\n<p>\u26a0\ufe0f When using a responsive <code>columns</code> prop, each grid item needs its corresponding breakpoint. For instance, this is not working. The grid item misses the value for <code>md</code>:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">container</span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> xs<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> md<span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token operator">></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>\n</code></pre>\n</blockquote>\n<h3 id="heading-responsive-values"><span class="anchor-link" id="responsive-values"></span>Row &amp; column spacing<a aria-labelledby="heading-responsive-values" class="anchor-link-style" href="#responsive-values" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>rowSpacing</code> and <code>columnSpacing</code> props allow for specifying the row and column gaps independently. It&#39;s similar to the <code>row-gap</code> and <code>column-gap</code> properties of <a href="/zh/system/grid/#row-gap-amp-column-gap">CSS Grid</a>.</p>\n',{demo:"pages/components/grid/RowAndColumnSpacing.js",bg:!0},'<h2 id="heading-interactive"><span class="anchor-link" id="interactive"></span>\u4ea4\u4e92\u5f0f<a aria-labelledby="heading-interactive" class="anchor-link-style" href="#interactive" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7684\u6f14\u793a\uff0c\u4f60\u4e5f\u53ef\u4ee5\u63a2\u7d22\u4e0d\u540c\u8bbe\u7f6e\u4e0b\u7684\u89c6\u89c9\u7ed3\u679c\uff1a</p>\n',{demo:"pages/components/grid/InteractiveGrid.js",hideToolbar:!0,bg:!0},'<h2 id="heading-auto-layout"><span class="anchor-link" id="auto-layout"></span>\u81ea\u9002\u5e94\u5e03\u5c40<a aria-labelledby="heading-auto-layout" class="anchor-link-style" href="#auto-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The Auto-layout makes the <em>items</em> equitably share the available space. That also means you can set the width of one <em>item</em> and the others will automatically resize around it.</p>\n',{demo:"pages/components/grid/AutoGrid.js",bg:!0},'<h2 id="heading-variable-width-content"><span class="anchor-link" id="variable-width-content"></span>\u590d\u6742\u7684\u6805\u683c<a aria-labelledby="heading-variable-width-content" class="anchor-link-style" href="#variable-width-content" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The following demo doesn&#39;t follow the Material Design guidelines, but illustrates how the grid can be used to build complex layouts.</p>\n',{demo:"pages/components/grid/ComplexGrid.js",bg:!0},'<h2 id="heading-complex-grid"><span class="anchor-link" id="complex-grid"></span>\u5d4c\u5957\u6805\u683c<a aria-labelledby="heading-complex-grid" class="anchor-link-style" href="#complex-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>container</code> and <code>item</code> props are two independent booleans; they can be combined to allow a Grid component to be both a flex container and child.</p>\n<blockquote>\n<p>A flex <strong>container</strong> is the box generated by an element with a computed display of <code>flex</code> or <code>inline-flex</code>. In-flow children of a flex container are called flex <strong>items</strong> and are laid out using the flex layout model.</p>\n</blockquote>\n<p><a href="https://www.w3.org/TR/css-flexbox-1/#box-model" target="_blank" rel="noopener nofollow">https://www.w3.org/TR/css-flexbox-1/#box-model</a></p>\n',{demo:"pages/components/grid/NestedGrid.js",bg:!0},'<p>\u26a0\ufe0f Defining an explicit width to a Grid element that is flex container, flex item, and has spacing at the same time lead to unexpected behavior, avoid doing it:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">spacing</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">container</span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">12</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n<p>If you need to do such, remove one of the props.</p>\n<h2 id="heading-nested-grid"><span class="anchor-link" id="nested-grid"></span>\u5217<a aria-labelledby="heading-nested-grid" class="anchor-link-style" href="#nested-grid" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>You can change the default number of columns (12) with the <code>columns</code> prop.</p>\n',{demo:"pages/components/grid/ColumnsGrid.js",bg:!0},'<h2 id="heading-columns"><span class="anchor-link" id="columns"></span>\u8bbe\u8ba1\u5c40\u9650<a aria-labelledby="heading-columns" class="anchor-link-style" href="#columns" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><h3 id="heading-limitations"><span class="anchor-link" id="limitations"></span>\u8d1f\u8fb9\u8ddd<a aria-labelledby="heading-limitations" class="anchor-link-style" href="#limitations" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The spacing between items is implemented with a negative margin. This might lead to unexpected behaviors. For instance, to apply a background color, you need to apply <code>display: flex;</code> to the parent.</p>\n<h3 id="heading-negative-margin"><span class="anchor-link" id="negative-margin"></span>white-space: nowrap;<a aria-labelledby="heading-negative-margin" class="anchor-link-style" href="#negative-margin" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u6211\u4eec\u89c4\u5b9a\u4e86 flex \u5143\u7d20\u7684\u9ed8\u8ba4\u5c5e\u6027\u503c\u4e3a <code>min-width\uff1aauto</code>\u3002 \u5f53\u5b50\u5143\u7d20\u4f7f\u7528 <code>white-space: nowrap;</code>\u65f6\uff0c\u5219\u4f1a\u51fa\u73b0\u4f4d\u7f6e\u7684\u51b2\u7a81\u3002 \u4ee5\u4e0b\u7684\u6848\u4f8b\u76f4\u89c2\u7684\u53cd\u5e94\u4e86\u8fd9\u4e2a\u95ee\u9898\uff1a</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n<p>\u82e5\u60f3\u8ba9\u5b50\u9879\u7ee7\u7eed\u5728\u5bb9\u5668\u5185\u5c55\u793a\uff0c\u60a8\u9700\u8981\u8bbe\u7f6e <code>min-width: 0</code>\u3002 In practice, you can set the <code>zeroMinWidth</code> prop:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">xs</span> <span class="token attr-name">zeroMinWidth</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography</span></span> <span class="token attr-name">noWrap</span><span class="token punctuation">></span></span>\n</code></pre>\n',{demo:"pages/components/grid/AutoGridNoWrap.js",bg:!0},'<h3 id="heading-white-space-nowrap"><span class="anchor-link" id="white-space-nowrap"></span>direction: column | column-reverse<a aria-labelledby="heading-white-space-nowrap" class="anchor-link-style" href="#white-space-nowrap" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code>, and <code>xl</code> props are <strong>not supported</strong> within <code>direction=&quot;column&quot;</code> and <code>direction=&quot;column-reverse&quot;</code> containers.</p>\n<p>They define the number of grids the component will use for a given breakpoint. They are intended to control <strong>width</strong> using <code>flex-basis</code> in <code>row</code> containers but they will impact height in <code>column</code> containers. If used, these props may have undesirable effects on the height of the <code>Grid</code> item elements.</p>\n<h2 id="heading-direction-column-column-reverse"><span class="anchor-link" id="direction-column-column-reverse"></span>CSS \u6805\u683c\u5e03\u5c40<a aria-labelledby="heading-direction-column-column-reverse" class="anchor-link-style" href="#direction-column-column-reverse" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>The <code>Grid</code> component is using CSS flexbox internally. But as seen below, you can easily use <a href="/zh/system/grid/">the system</a> and CSS Grid to layout your pages.</p>\n',{demo:"pages/components/grid/CSSGrid.js",bg:!0},'<h2 id="heading-css-grid-layout"><span class="anchor-link" id="css-grid-layout"></span>System props<a aria-labelledby="heading-css-grid-layout" class="anchor-link-style" href="#css-grid-layout" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>As a CSS utility component, the <code>Grid</code> supports all <a href="/zh/system/properties/"><code>system</code></a> properties. You can use them as props directly on the component. For instance, a padding:</p>\n<pre><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span> <span class="token attr-name">item</span> <span class="token attr-name">p</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n</code></pre>\n','<h2 id="heading-system-props"><span class="anchor-link" id="system-props"></span>API<a aria-labelledby="heading-system-props" class="anchor-link-style" href="#system-props" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><ul>\n<li><a href="/zh/api/grid/"><code>&lt;Grid /&gt;</code></a></li>\n</ul>\n'],toc:[{text:"\u5de5\u4f5c\u539f\u7406",level:2,hash:"how-it-works",children:[]},{text:"Fluid grids \u6d41\u5f0f\u7f51\u683c",level:2,hash:"fluid-grids",children:[{text:"\u57fa\u672c\u6805\u683c",level:3,hash:"basic-grid"},{text:"\u6709\u65ad\u70b9\u7684\u6805\u683c",level:3,hash:"grid-with-multiple-breakpoints"}]},{text:"Spacing \u95f4\u8ddd",level:2,hash:"spacing",children:[]},{text:"\u54cd\u5e94\u5f0f\u7684\u503c",level:2,hash:"row-amp-column-spacing",children:[{text:"Row &amp; column spacing",level:3,hash:"responsive-values"}]},{text:"\u4ea4\u4e92\u5f0f",level:2,hash:"interactive",children:[]},{text:"\u81ea\u9002\u5e94\u5e03\u5c40",level:2,hash:"auto-layout",children:[]},{text:"\u590d\u6742\u7684\u6805\u683c",level:2,hash:"variable-width-content",children:[]},{text:"\u5d4c\u5957\u6805\u683c",level:2,hash:"complex-grid",children:[]},{text:"\u5217",level:2,hash:"nested-grid",children:[]},{text:"\u8bbe\u8ba1\u5c40\u9650",level:2,hash:"columns",children:[{text:"\u8d1f\u8fb9\u8ddd",level:3,hash:"limitations"},{text:"white-space: nowrap;",level:3,hash:"negative-margin"},{text:"direction: column | column-reverse",level:3,hash:"white-space-nowrap"}]},{text:"CSS \u6805\u683c\u5e03\u5c40",level:2,hash:"direction-column-column-reverse",children:[]},{text:"System props",level:2,hash:"css-grid-layout",children:[]},{text:"API",level:2,hash:"system-props",children:[]}],title:"React Grid\uff08\u6805\u683c\uff09\u7ec4\u4ef6",headers:{title:"React Grid\uff08\u6805\u683c\uff09\u7ec4\u4ef6",components:["Grid"],githubLabel:"component: Grid",materialDesign:"https://material.io/design/layout/understanding-layout.html"}}},Gn={"pages/components/grid/BasicGrid.js":{module:"./BasicGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function BasicGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={2}>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n  <Grid item xs={4}>\n    <Item>xs=4</Item>\n  </Grid>\n  <Grid item xs={4}>\n    <Item>xs=4</Item>\n  </Grid>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n</Grid>",moduleTS:"./BasicGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function BasicGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={4}>\n          <Item>xs=4</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"pages/components/grid/FullWidthGrid.js":{module:"./FullWidthGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function FullWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={2}>\n  <Grid item xs={6} md={8}>\n    <Item>xs=6 md=8</Item>\n  </Grid>\n  <Grid item xs={6} md={4}>\n    <Item>xs=6 md=4</Item>\n  </Grid>\n  <Grid item xs={6} md={4}>\n    <Item>xs=6 md=4</Item>\n  </Grid>\n  <Grid item xs={6} md={8}>\n    <Item>xs=6 md=8</Item>\n  </Grid>\n</Grid>",moduleTS:"./FullWidthGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function FullWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={4}>\n          <Item>xs=6 md=4</Item>\n        </Grid>\n        <Grid item xs={6} md={8}>\n          <Item>xs=6 md=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"pages/components/grid/SpacingGrid.js":{module:"./SpacingGrid.js",raw:"import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport HighlightedCode from 'docs/src/modules/components/HighlightedCode';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport Paper from '@mui/material/Paper';\n\nexport default function SpacingGrid() {\n  const [spacing, setSpacing] = React.useState(2);\n\n  const handleChange = (event) => {\n    setSpacing(Number(event.target.value));\n  };\n\n  const jsx = `\n<Grid container spacing={${spacing}}>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justifyContent=\"center\" spacing={spacing}>\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper sx={{ height: 140, width: 100 }} />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container>\n            <Grid item>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">spacing</FormLabel>\n                <RadioGroup\n                  name=\"spacing\"\n                  aria-label=\"spacing\"\n                  value={spacing.toString()}\n                  onChange={handleChange}\n                  row\n                >\n                  {[0, 0.5, 1, 2, 3, 4, 8, 12].map((value) => (\n                    <FormControlLabel\n                      key={value}\n                      value={value.toString()}\n                      control={<Radio />}\n                      label={value.toString()}\n                    />\n                  ))}\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n        <HighlightedCode code={jsx} language=\"jsx\" />\n      </Grid>\n    </Grid>\n  );\n}\n",moduleTS:"./SpacingGrid.js",rawTS:"import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport HighlightedCode from 'docs/src/modules/components/HighlightedCode';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport Paper from '@mui/material/Paper';\n\nexport default function SpacingGrid() {\n  const [spacing, setSpacing] = React.useState(2);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSpacing(Number((event.target as HTMLInputElement).value));\n  };\n\n  const jsx = `\n<Grid container spacing={${spacing}}>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justifyContent=\"center\" spacing={spacing}>\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper sx={{ height: 140, width: 100 }} />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container>\n            <Grid item>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">spacing</FormLabel>\n                <RadioGroup\n                  name=\"spacing\"\n                  aria-label=\"spacing\"\n                  value={spacing.toString()}\n                  onChange={handleChange}\n                  row\n                >\n                  {[0, 0.5, 1, 2, 3, 4, 8, 12].map((value) => (\n                    <FormControlLabel\n                      key={value}\n                      value={value.toString()}\n                      control={<Radio />}\n                      label={value.toString()}\n                    />\n                  ))}\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n        <HighlightedCode code={jsx} language=\"jsx\" />\n      </Grid>\n    </Grid>\n  );\n}\n"},"pages/components/grid/ResponsiveGrid.js":{module:"./ResponsiveGrid.js",raw:"import * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ResponsiveGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n        {Array.from(Array(6)).map((_, index) => (\n          <Grid item xs={2} sm={4} md={4} key={index}>\n            <Item>xs=2</Item>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n  {Array.from(Array(6)).map((_, index) => (\n    <Grid item xs={2} sm={4} md={4} key={index}>\n      <Item>xs=2</Item>\n    </Grid>\n  ))}\n</Grid>",moduleTS:"./ResponsiveGrid.js",rawTS:"import * as React from 'react';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ResponsiveGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n        {Array.from(Array(6)).map((_, index) => (\n          <Grid item xs={2} sm={4} md={4} key={index}>\n            <Item>xs=2</Item>\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n"},"pages/components/grid/InteractiveGrid.js":{module:"./InteractiveGrid.js",raw:'import * as React from \'react\';\nimport Grid from \'@mui/material/Grid\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport Radio from \'@mui/material/Radio\';\nimport Paper from \'@mui/material/Paper\';\nimport HighlightedCode from \'docs/src/modules/components/HighlightedCode\';\n\nexport default function InteractiveGrid() {\n  const [direction, setDirection] = React.useState(\'row\');\n  const [justifyContent, setJustifyContent] = React.useState(\'center\');\n  const [alignItems, setAlignItems] = React.useState(\'center\');\n\n  const jsx = `\n<Grid\n  container\n  direction="${direction}"\n  justifyContent="${justifyContent}"\n  alignItems="${alignItems}"\n>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container>\n      <Grid item xs={12}>\n        <Grid\n          sx={{ height: 240 }}\n          container\n          spacing={2}\n          alignItems={alignItems}\n          direction={direction}\n          justifyContent={justifyContent}\n        >\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper\n                sx={{\n                  p: 2,\n                  height: \'100%\',\n                  color: \'text.secondary\',\n                  pt: `${(value + 1) * 10}px`,\n                  pb: `${(value + 1) * 10}px`,\n                }}\n              >\n                {`Cell ${value + 1}`}\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">direction</FormLabel>\n                <RadioGroup\n                  row\n                  name="direction"\n                  aria-label="direction"\n                  value={direction}\n                  onChange={(event) => {\n                    setDirection(event.target.value);\n                  }}\n                >\n                  <FormControlLabel value="row" control={<Radio />} label="row" />\n                  <FormControlLabel\n                    value="row-reverse"\n                    control={<Radio />}\n                    label="row-reverse"\n                  />\n                  <FormControlLabel\n                    value="column"\n                    control={<Radio />}\n                    label="column"\n                  />\n                  <FormControlLabel\n                    value="column-reverse"\n                    control={<Radio />}\n                    label="column-reverse"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">justifyContent</FormLabel>\n                <RadioGroup\n                  row\n                  name="justifyContent"\n                  aria-label="justifyContent"\n                  value={justifyContent}\n                  onChange={(event) => {\n                    setJustifyContent(event.target.value);\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="space-between"\n                    control={<Radio />}\n                    label="space-between"\n                  />\n                  <FormControlLabel\n                    value="space-around"\n                    control={<Radio />}\n                    label="space-around"\n                  />\n                  <FormControlLabel\n                    value="space-evenly"\n                    control={<Radio />}\n                    label="space-evenly"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">alignItems</FormLabel>\n                <RadioGroup\n                  row\n                  name="alignItems"\n                  aria-label="align items"\n                  value={alignItems}\n                  onChange={(event) => {\n                    setAlignItems(event.target.value);\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="stretch"\n                    control={<Radio />}\n                    label="stretch"\n                  />\n                  <FormControlLabel\n                    value="baseline"\n                    control={<Radio />}\n                    label="baseline"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <HighlightedCode code={jsx} language="jsx" />\n      </Grid>\n    </Grid>\n  );\n}\n',moduleTS:"./InteractiveGrid.js",rawTS:'import * as React from \'react\';\nimport Grid, { GridDirection } from \'@mui/material/Grid\';\nimport FormControl from \'@mui/material/FormControl\';\nimport FormLabel from \'@mui/material/FormLabel\';\nimport FormControlLabel from \'@mui/material/FormControlLabel\';\nimport RadioGroup from \'@mui/material/RadioGroup\';\nimport Radio from \'@mui/material/Radio\';\nimport Paper from \'@mui/material/Paper\';\nimport HighlightedCode from \'docs/src/modules/components/HighlightedCode\';\n\ntype GridItemsAlignment =\n  | \'flex-start\'\n  | \'center\'\n  | \'flex-end\'\n  | \'stretch\'\n  | \'baseline\';\n\ntype GridJustification =\n  | \'flex-start\'\n  | \'center\'\n  | \'flex-end\'\n  | \'space-between\'\n  | \'space-around\'\n  | \'space-evenly\';\n\nexport default function InteractiveGrid() {\n  const [direction, setDirection] = React.useState<GridDirection>(\'row\');\n  const [justifyContent, setJustifyContent] =\n    React.useState<GridJustification>(\'center\');\n  const [alignItems, setAlignItems] = React.useState<GridItemsAlignment>(\'center\');\n\n  const jsx = `\n<Grid\n  container\n  direction="${direction}"\n  justifyContent="${justifyContent}"\n  alignItems="${alignItems}"\n>\n`;\n\n  return (\n    <Grid sx={{ flexGrow: 1 }} container>\n      <Grid item xs={12}>\n        <Grid\n          sx={{ height: 240 }}\n          container\n          spacing={2}\n          alignItems={alignItems}\n          direction={direction}\n          justifyContent={justifyContent}\n        >\n          {[0, 1, 2].map((value) => (\n            <Grid key={value} item>\n              <Paper\n                sx={{\n                  p: 2,\n                  height: \'100%\',\n                  color: \'text.secondary\',\n                  pt: `${(value + 1) * 10}px`,\n                  pb: `${(value + 1) * 10}px`,\n                }}\n              >\n                {`Cell ${value + 1}`}\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper sx={{ p: 2 }}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">direction</FormLabel>\n                <RadioGroup\n                  row\n                  name="direction"\n                  aria-label="direction"\n                  value={direction}\n                  onChange={(event) => {\n                    setDirection(\n                      (event.target as HTMLInputElement).value as GridDirection,\n                    );\n                  }}\n                >\n                  <FormControlLabel value="row" control={<Radio />} label="row" />\n                  <FormControlLabel\n                    value="row-reverse"\n                    control={<Radio />}\n                    label="row-reverse"\n                  />\n                  <FormControlLabel\n                    value="column"\n                    control={<Radio />}\n                    label="column"\n                  />\n                  <FormControlLabel\n                    value="column-reverse"\n                    control={<Radio />}\n                    label="column-reverse"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">justifyContent</FormLabel>\n                <RadioGroup\n                  row\n                  name="justifyContent"\n                  aria-label="justifyContent"\n                  value={justifyContent}\n                  onChange={(event) => {\n                    setJustifyContent(\n                      (event.target as HTMLInputElement).value as GridJustification,\n                    );\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="space-between"\n                    control={<Radio />}\n                    label="space-between"\n                  />\n                  <FormControlLabel\n                    value="space-around"\n                    control={<Radio />}\n                    label="space-around"\n                  />\n                  <FormControlLabel\n                    value="space-evenly"\n                    control={<Radio />}\n                    label="space-evenly"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl component="fieldset">\n                <FormLabel component="legend">alignItems</FormLabel>\n                <RadioGroup\n                  row\n                  name="alignItems"\n                  aria-label="align items"\n                  value={alignItems}\n                  onChange={(event) => {\n                    setAlignItems(\n                      (event.target as HTMLInputElement).value as GridItemsAlignment,\n                    );\n                  }}\n                >\n                  <FormControlLabel\n                    value="flex-start"\n                    control={<Radio />}\n                    label="flex-start"\n                  />\n                  <FormControlLabel\n                    value="center"\n                    control={<Radio />}\n                    label="center"\n                  />\n                  <FormControlLabel\n                    value="flex-end"\n                    control={<Radio />}\n                    label="flex-end"\n                  />\n                  <FormControlLabel\n                    value="stretch"\n                    control={<Radio />}\n                    label="stretch"\n                  />\n                  <FormControlLabel\n                    value="baseline"\n                    control={<Radio />}\n                    label="baseline"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <HighlightedCode code={jsx} language="jsx" />\n      </Grid>\n    </Grid>\n  );\n}\n'},"pages/components/grid/AutoGrid.js":{module:"./AutoGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function AutoGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={3}>\n  <Grid item xs>\n    <Item>xs</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>xs=6</Item>\n  </Grid>\n  <Grid item xs>\n    <Item>xs</Item>\n  </Grid>\n</Grid>",moduleTS:"./AutoGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function AutoGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"pages/components/grid/ComplexGrid.js":{module:"./ComplexGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nconst Img = styled('img')({\n  margin: 'auto',\n  display: 'block',\n  maxWidth: '100%',\n  maxHeight: '100%',\n});\n\nexport default function ComplexGrid() {\n  return (\n    <Paper sx={{ p: 2, margin: 'auto', maxWidth: 500, flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item>\n          <ButtonBase sx={{ width: 128, height: 128 }}>\n            <Img alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n          </ButtonBase>\n        </Grid>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={2}>\n            <Grid item xs>\n              <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n                Standard license\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                Full resolution 1920x1080 \u2022 JPEG\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                ID: 1030114\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography sx={{ cursor: 'pointer' }} variant=\"body2\">\n                Remove\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle1\" component=\"div\">\n              $19.00\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n",moduleTS:"./ComplexGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport ButtonBase from '@mui/material/ButtonBase';\n\nconst Img = styled('img')({\n  margin: 'auto',\n  display: 'block',\n  maxWidth: '100%',\n  maxHeight: '100%',\n});\n\nexport default function ComplexGrid() {\n  return (\n    <Paper sx={{ p: 2, margin: 'auto', maxWidth: 500, flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item>\n          <ButtonBase sx={{ width: 128, height: 128 }}>\n            <Img alt=\"complex\" src=\"/static/images/grid/complex.jpg\" />\n          </ButtonBase>\n        </Grid>\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={2}>\n            <Grid item xs>\n              <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n                Standard license\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                Full resolution 1920x1080 \u2022 JPEG\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                ID: 1030114\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography sx={{ cursor: 'pointer' }} variant=\"body2\">\n                Remove\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"subtitle1\" component=\"div\">\n              $19.00\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n"},"pages/components/grid/VariableWidthGrid.js":{module:"./VariableWidthGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function VariableWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs=\"auto\">\n          <Item>variable width content</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:'<Grid container spacing={3}>\n  <Grid item xs="auto">\n    <Item>variable width content</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>xs=6</Item>\n  </Grid>\n  <Grid item xs>\n    <Item>xs</Item>\n  </Grid>\n</Grid>',moduleTS:"./VariableWidthGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function VariableWidthGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={3}>\n        <Grid item xs=\"auto\">\n          <Item>variable width content</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>xs=6</Item>\n        </Grid>\n        <Grid item xs>\n          <Item>xs</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"pages/components/grid/RowAndColumnSpacing.js":{module:"./RowAndColumnSpacing.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function RowAndColumnSpacing() {\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={6}>\n          <Item>1</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>2</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>3</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>4</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n  <Grid item xs={6}>\n    <Item>1</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>2</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>3</Item>\n  </Grid>\n  <Grid item xs={6}>\n    <Item>4</Item>\n  </Grid>\n</Grid>",moduleTS:"./RowAndColumnSpacing.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function RowAndColumnSpacing() {\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item xs={6}>\n          <Item>1</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>2</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>3</Item>\n        </Grid>\n        <Grid item xs={6}>\n          <Item>4</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"pages/components/grid/ColumnsGrid.js":{module:"./ColumnsGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ColumnsGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2} columns={16}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={2} columns={16}>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n  <Grid item xs={8}>\n    <Item>xs=8</Item>\n  </Grid>\n</Grid>",moduleTS:"./ColumnsGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function ColumnsGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2} columns={16}>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n        <Grid item xs={8}>\n          <Item>xs=8</Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"pages/components/grid/NestedGrid.js":{module:"./NestedGrid.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nfunction FormRow() {\n  return (\n    <React.Fragment>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default function NestedGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n",jsxPreview:"<Grid container spacing={1}>\n  <Grid container item spacing={3}>\n    <FormRow />\n  </Grid>\n  <Grid container item spacing={3}>\n    <FormRow />\n  </Grid>\n  <Grid container item spacing={3}>\n    <FormRow />\n  </Grid>\n</Grid>",moduleTS:"./NestedGrid.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nfunction FormRow() {\n  return (\n    <React.Fragment>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n      <Grid item xs={4}>\n        <Item>Item</Item>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default function NestedGrid() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={1}>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n"},"pages/components/grid/CSSGrid.js":{module:"./CSSGrid.js",raw:'import * as React from \'react\';\nimport { styled } from \'@mui/material/styles\';\nimport Box from \'@mui/material/Box\';\nimport Paper from \'@mui/material/Paper\';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \'center\',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function CSSGrid() {\n  return (\n    <Box sx={{ width: 1 }}>\n      <Box display="grid" gridTemplateColumns="repeat(12, 1fr)" gap={2}>\n        <Box gridColumn="span 8">\n          <Item>xs=8</Item>\n        </Box>\n        <Box gridColumn="span 4">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn="span 4">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn="span 8">\n          <Item>xs=8</Item>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n',jsxPreview:'<Box display="grid" gridTemplateColumns="repeat(12, 1fr)" gap={2}>\n  <Box gridColumn="span 8">\n    <Item>xs=8</Item>\n  </Box>\n  <Box gridColumn="span 4">\n    <Item>xs=4</Item>\n  </Box>\n  <Box gridColumn="span 4">\n    <Item>xs=4</Item>\n  </Box>\n  <Box gridColumn="span 8">\n    <Item>xs=8</Item>\n  </Box>\n</Box>',moduleTS:"./CSSGrid.js",rawTS:'import * as React from \'react\';\nimport { styled } from \'@mui/material/styles\';\nimport Box from \'@mui/material/Box\';\nimport Paper from \'@mui/material/Paper\';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \'center\',\n  color: theme.palette.text.secondary,\n}));\n\nexport default function CSSGrid() {\n  return (\n    <Box sx={{ width: 1 }}>\n      <Box display="grid" gridTemplateColumns="repeat(12, 1fr)" gap={2}>\n        <Box gridColumn="span 8">\n          <Item>xs=8</Item>\n        </Box>\n        <Box gridColumn="span 4">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn="span 4">\n          <Item>xs=4</Item>\n        </Box>\n        <Box gridColumn="span 8">\n          <Item>xs=8</Item>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n'},"pages/components/grid/AutoGridNoWrap.js":{module:"./AutoGridNoWrap.js",raw:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\nexport default function AutoGridNoWrap() {\n  return (\n    <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3 }}>\n      <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Box>\n  );\n}\n",moduleTS:"./AutoGridNoWrap.js",rawTS:"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Avatar from '@mui/material/Avatar';\nimport Typography from '@mui/material/Typography';\n\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support. `;\n\nexport default function AutoGridNoWrap() {\n  return (\n    <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3 }}>\n      <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs zeroMinWidth>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography noWrap>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n      <Paper sx={{ maxWidth: 400, my: 1, mx: 'auto', p: 2 }}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography>{message}</Typography>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Box>\n  );\n}\n"}},wn={"./BasicGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:t||(t=(0,m.jsxs)(p.ZP,{container:!0,spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,xs:8,children:(0,m.jsx)(u,{children:"xs=8"})}),(0,m.jsx)(p.ZP,{item:!0,xs:4,children:(0,m.jsx)(u,{children:"xs=4"})}),(0,m.jsx)(p.ZP,{item:!0,xs:4,children:(0,m.jsx)(u,{children:"xs=4"})}),(0,m.jsx)(p.ZP,{item:!0,xs:8,children:(0,m.jsx)(u,{children:"xs=8"})})]}))})},"./FullWidthGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:i||(i=(0,m.jsxs)(p.ZP,{container:!0,spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,xs:6,md:8,children:(0,m.jsx)(h,{children:"xs=6 md=8"})}),(0,m.jsx)(p.ZP,{item:!0,xs:6,md:4,children:(0,m.jsx)(h,{children:"xs=6 md=4"})}),(0,m.jsx)(p.ZP,{item:!0,xs:6,md:4,children:(0,m.jsx)(h,{children:"xs=6 md=4"})}),(0,m.jsx)(p.ZP,{item:!0,xs:6,md:8,children:(0,m.jsx)(h,{children:"xs=6 md=8"})})]}))})},"./SpacingGrid.js":function(){var n=o.useState(2),e=(0,f.Z)(n,2),a=e[0],t=e[1],i="\n<Grid container spacing={".concat(a,"}>\n");return(0,m.jsxs)(p.ZP,{sx:{flexGrow:1},container:!0,spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsx)(p.ZP,{container:!0,justifyContent:"center",spacing:a,children:[0,1,2].map((function(n){return(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(d.Z,{sx:{height:140,width:100}})},n)}))})}),(0,m.jsxs)(p.ZP,{item:!0,xs:12,children:[(0,m.jsx)(d.Z,{sx:{p:2},children:(0,m.jsx)(p.ZP,{container:!0,children:(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsxs)(v.Z,{component:"fieldset",children:[g||(g=(0,m.jsx)(y.Z,{component:"legend",children:"spacing"})),(0,m.jsx)(G.Z,{name:"spacing","aria-label":"spacing",value:a.toString(),onChange:function(n){t(Number(n.target.value))},row:!0,children:[0,.5,1,2,3,4,8,12].map((function(n){return(0,m.jsx)(b.Z,{value:n.toString(),control:x||(x=(0,m.jsx)(w.Z,{})),label:n.toString()},n)}))})]})})})}),(0,m.jsx)(k.Z,{code:i,language:"jsx"})]})]})},"./ResponsiveGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:(0,m.jsx)(p.ZP,{container:!0,spacing:{xs:2,md:3},columns:{xs:4,sm:8,md:12},children:V()(Array(6)).map((function(n,e){return(0,m.jsx)(p.ZP,{item:!0,xs:2,sm:4,md:4,children:j||(j=(0,m.jsx)($,{children:"xs=2"}))},e)}))})})},"./InteractiveGrid.js":function(){var n=o.useState("row"),e=(0,f.Z)(n,2),a=e[0],t=e[1],i=o.useState("center"),s=(0,f.Z)(i,2),r=s[0],l=s[1],c=o.useState("center"),u=(0,f.Z)(c,2),h=u[0],g=u[1],x='\n<Grid\n  container\n  direction="'.concat(a,'"\n  justifyContent="').concat(r,'"\n  alignItems="').concat(h,'"\n>\n');return(0,m.jsxs)(p.ZP,{sx:{flexGrow:1},container:!0,children:[(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsx)(p.ZP,{sx:{height:240},container:!0,spacing:2,alignItems:h,direction:a,justifyContent:r,children:[0,1,2].map((function(n){return(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(d.Z,{sx:{p:2,height:"100%",color:"text.secondary",pt:"".concat(10*(n+1),"px"),pb:"".concat(10*(n+1),"px")},children:"Cell ".concat(n+1)})},n)}))})}),(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsx)(d.Z,{sx:{p:2},children:(0,m.jsxs)(p.ZP,{container:!0,spacing:3,children:[(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsxs)(v.Z,{component:"fieldset",children:[I||(I=(0,m.jsx)(y.Z,{component:"legend",children:"direction"})),(0,m.jsxs)(G.Z,{row:!0,name:"direction","aria-label":"direction",value:a,onChange:function(n){t(n.target.value)},children:[C||(C=(0,m.jsx)(b.Z,{value:"row",control:(0,m.jsx)(w.Z,{}),label:"row"})),P||(P=(0,m.jsx)(b.Z,{value:"row-reverse",control:(0,m.jsx)(w.Z,{}),label:"row-reverse"})),Z||(Z=(0,m.jsx)(b.Z,{value:"column",control:(0,m.jsx)(w.Z,{}),label:"column"})),S||(S=(0,m.jsx)(b.Z,{value:"column-reverse",control:(0,m.jsx)(w.Z,{}),label:"column-reverse"}))]})]})}),(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsxs)(v.Z,{component:"fieldset",children:[R||(R=(0,m.jsx)(y.Z,{component:"legend",children:"justifyContent"})),(0,m.jsxs)(G.Z,{row:!0,name:"justifyContent","aria-label":"justifyContent",value:r,onChange:function(n){l(n.target.value)},children:[T||(T=(0,m.jsx)(b.Z,{value:"flex-start",control:(0,m.jsx)(w.Z,{}),label:"flex-start"})),B||(B=(0,m.jsx)(b.Z,{value:"center",control:(0,m.jsx)(w.Z,{}),label:"center"})),F||(F=(0,m.jsx)(b.Z,{value:"flex-end",control:(0,m.jsx)(w.Z,{}),label:"flex-end"})),A||(A=(0,m.jsx)(b.Z,{value:"space-between",control:(0,m.jsx)(w.Z,{}),label:"space-between"})),L||(L=(0,m.jsx)(b.Z,{value:"space-around",control:(0,m.jsx)(w.Z,{}),label:"space-around"})),W||(W=(0,m.jsx)(b.Z,{value:"space-evenly",control:(0,m.jsx)(w.Z,{}),label:"space-evenly"}))]})]})}),(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsxs)(v.Z,{component:"fieldset",children:[q||(q=(0,m.jsx)(y.Z,{component:"legend",children:"alignItems"})),(0,m.jsxs)(G.Z,{row:!0,name:"alignItems","aria-label":"align items",value:h,onChange:function(n){g(n.target.value)},children:[z||(z=(0,m.jsx)(b.Z,{value:"flex-start",control:(0,m.jsx)(w.Z,{}),label:"flex-start"})),D||(D=(0,m.jsx)(b.Z,{value:"center",control:(0,m.jsx)(w.Z,{}),label:"center"})),M||(M=(0,m.jsx)(b.Z,{value:"flex-end",control:(0,m.jsx)(w.Z,{}),label:"flex-end"})),_||(_=(0,m.jsx)(b.Z,{value:"stretch",control:(0,m.jsx)(w.Z,{}),label:"stretch"})),H||(H=(0,m.jsx)(b.Z,{value:"baseline",control:(0,m.jsx)(w.Z,{}),label:"baseline"}))]})]})})]})})}),(0,m.jsx)(p.ZP,{item:!0,xs:12,children:(0,m.jsx)(k.Z,{code:x,language:"jsx"})})]})},"./AutoGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:N||(N=(0,m.jsxs)(p.ZP,{container:!0,spacing:3,children:[(0,m.jsx)(p.ZP,{item:!0,xs:!0,children:(0,m.jsx)(O,{children:"xs"})}),(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(O,{children:"xs=6"})}),(0,m.jsx)(p.ZP,{item:!0,xs:!0,children:(0,m.jsx)(O,{children:"xs"})})]}))})},"./ComplexGrid.js":function(){return(0,m.jsx)(d.Z,{sx:{p:2,margin:"auto",maxWidth:500,flexGrow:1},children:(0,m.jsxs)(p.ZP,{container:!0,spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(K.Z,{sx:{width:128,height:128},children:J||(J=(0,m.jsx)(nn,{alt:"complex",src:"/static/images/grid/complex.jpg"}))})}),(0,m.jsxs)(p.ZP,{item:!0,xs:12,sm:!0,container:!0,children:[(0,m.jsxs)(p.ZP,{item:!0,xs:!0,container:!0,direction:"column",spacing:2,children:[Y||(Y=(0,m.jsxs)(p.ZP,{item:!0,xs:!0,children:[(0,m.jsx)(Q.Z,{gutterBottom:!0,variant:"subtitle1",component:"div",children:"Standard license"}),(0,m.jsx)(Q.Z,{variant:"body2",gutterBottom:!0,children:"Full resolution 1920x1080 \u2022 JPEG"}),(0,m.jsx)(Q.Z,{variant:"body2",color:"text.secondary",children:"ID: 1030114"})]})),(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(Q.Z,{sx:{cursor:"pointer"},variant:"body2",children:"Remove"})})]}),U||(U=(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(Q.Z,{variant:"subtitle1",component:"div",children:"$19.00"})}))]})]})})},"./VariableWidthGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:X||(X=(0,m.jsxs)(p.ZP,{container:!0,spacing:3,children:[(0,m.jsx)(p.ZP,{item:!0,xs:"auto",children:(0,m.jsx)(sn,{children:"variable width content"})}),(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(sn,{children:"xs=6"})}),(0,m.jsx)(p.ZP,{item:!0,xs:!0,children:(0,m.jsx)(sn,{children:"xs"})})]}))})},"./RowAndColumnSpacing.js":function(){return(0,m.jsx)(c.Z,{sx:{width:"100%"},children:(0,m.jsxs)(p.ZP,{container:!0,rowSpacing:1,columnSpacing:{xs:1,sm:2,md:3},children:[en||(en=(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(ln,{children:"1"})})),an||(an=(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(ln,{children:"2"})})),tn||(tn=(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(ln,{children:"3"})})),on||(on=(0,m.jsx)(p.ZP,{item:!0,xs:6,children:(0,m.jsx)(ln,{children:"4"})}))]})})},"./ColumnsGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:rn||(rn=(0,m.jsxs)(p.ZP,{container:!0,spacing:2,columns:16,children:[(0,m.jsx)(p.ZP,{item:!0,xs:8,children:(0,m.jsx)(pn,{children:"xs=8"})}),(0,m.jsx)(p.ZP,{item:!0,xs:8,children:(0,m.jsx)(pn,{children:"xs=8"})})]}))})},"./NestedGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{flexGrow:1},children:dn||(dn=(0,m.jsxs)(p.ZP,{container:!0,spacing:1,children:[(0,m.jsx)(p.ZP,{container:!0,item:!0,spacing:3,children:(0,m.jsx)(hn,{})}),(0,m.jsx)(p.ZP,{container:!0,item:!0,spacing:3,children:(0,m.jsx)(hn,{})}),(0,m.jsx)(p.ZP,{container:!0,item:!0,spacing:3,children:(0,m.jsx)(hn,{})})]}))})},"./CSSGrid.js":function(){return(0,m.jsx)(c.Z,{sx:{width:1},children:mn||(mn=(0,m.jsxs)(c.Z,{display:"grid",gridTemplateColumns:"repeat(12, 1fr)",gap:2,children:[(0,m.jsx)(c.Z,{gridColumn:"span 8",children:(0,m.jsx)(gn,{children:"xs=8"})}),(0,m.jsx)(c.Z,{gridColumn:"span 4",children:(0,m.jsx)(gn,{children:"xs=4"})}),(0,m.jsx)(c.Z,{gridColumn:"span 4",children:(0,m.jsx)(gn,{children:"xs=4"})}),(0,m.jsx)(c.Z,{gridColumn:"span 8",children:(0,m.jsx)(gn,{children:"xs=8"})})]}))})},"./AutoGridNoWrap.js":function(){return(0,m.jsxs)(c.Z,{sx:{flexGrow:1,overflow:"hidden",px:3},children:[(0,m.jsx)(d.Z,{sx:{maxWidth:400,my:1,mx:"auto",p:2},children:xn||(xn=(0,m.jsxs)(p.ZP,{container:!0,wrap:"nowrap",spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(vn.Z,{children:"W"})}),(0,m.jsx)(p.ZP,{item:!0,xs:!0,zeroMinWidth:!0,children:(0,m.jsx)(Q.Z,{noWrap:!0,children:bn})})]}))}),(0,m.jsx)(d.Z,{sx:{maxWidth:400,my:1,mx:"auto",p:2},children:fn||(fn=(0,m.jsxs)(p.ZP,{container:!0,wrap:"nowrap",spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(vn.Z,{children:"W"})}),(0,m.jsx)(p.ZP,{item:!0,xs:!0,children:(0,m.jsx)(Q.Z,{noWrap:!0,children:bn})})]}))}),(0,m.jsx)(d.Z,{sx:{maxWidth:400,my:1,mx:"auto",p:2},children:yn||(yn=(0,m.jsxs)(p.ZP,{container:!0,wrap:"nowrap",spacing:2,children:[(0,m.jsx)(p.ZP,{item:!0,children:(0,m.jsx)(vn.Z,{children:"W"})}),(0,m.jsx)(p.ZP,{item:!0,xs:!0,children:(0,m.jsx)(Q.Z,{children:bn})})]}))})]})}};var jn;function In(){return jn||(jn=(0,m.jsx)(s.Z,{demos:Gn,docs:kn,demoComponents:wn}))}},78459:function(n,e,a){"use strict";a.d(e,{Z:function(){return b}});var t=a(659607),i=a(79952),o=a(295649),s=a(827378),r=a(138944),l=a(366292),c=a(33283),d=a(615388),p=a(881516),m=a(824246),u=(0,p.Z)((0,m.jsx)("path",{d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}),"Person"),h=a(208430);function g(n){return(0,h.Z)("MuiAvatar",n)}(0,a(614714).Z)("MuiAvatar",["root","colorDefault","circular","rounded","square","img","fallback"]);var x=["alt","children","className","component","imgProps","sizes","src","srcSet","variant"],f=(0,c.ZP)("div",{name:"MuiAvatar",slot:"Root",overridesResolver:function(n,e){var a=n.ownerState;return[e.root,e[a.variant],a.colorDefault&&e.colorDefault]}})((function(n){var e=n.theme,a=n.ownerState;return(0,o.Z)((0,o.Z)((0,o.Z)({position:"relative",display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0,width:40,height:40,fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(20),lineHeight:1,borderRadius:"50%",overflow:"hidden",userSelect:"none"},"rounded"===a.variant&&{borderRadius:e.shape.borderRadius}),"square"===a.variant&&{borderRadius:0}),a.colorDefault&&{color:e.palette.background.default,backgroundColor:"light"===e.palette.mode?e.palette.grey[400]:e.palette.grey[600]})})),y=(0,c.ZP)("img",{name:"MuiAvatar",slot:"Img",overridesResolver:function(n,e){return e.img}})({width:"100%",height:"100%",textAlign:"center",objectFit:"cover",color:"transparent",textIndent:1e4}),v=(0,c.ZP)(u,{name:"MuiAvatar",slot:"Fallback",overridesResolver:function(n,e){return e.fallback}})({width:"75%",height:"75%"});var b=s.forwardRef((function(n,e){var a=(0,d.Z)({props:n,name:"MuiAvatar"}),c=a.alt,p=a.children,u=a.className,h=a.component,b=void 0===h?"div":h,k=a.imgProps,G=a.sizes,w=a.src,j=a.srcSet,I=a.variant,C=void 0===I?"circular":I,P=(0,t.Z)(a,x),Z=null,S=function(n){var e=n.crossOrigin,a=n.referrerPolicy,t=n.src,o=n.srcSet,r=s.useState(!1),l=(0,i.Z)(r,2),c=l[0],d=l[1];return s.useEffect((function(){if(t||o){d(!1);var n=!0,i=new Image;return i.onload=function(){n&&d("loaded")},i.onerror=function(){n&&d("error")},i.crossOrigin=e,i.referrerPolicy=a,i.src=t,o&&(i.srcset=o),function(){n=!1}}}),[e,a,t,o]),c}((0,o.Z)((0,o.Z)({},k),{},{src:w,srcSet:j})),R=w||j,T=R&&"error"!==S,B=(0,o.Z)((0,o.Z)({},a),{},{colorDefault:!T,component:b,variant:C}),F=function(n){var e=n.classes,a={root:["root",n.variant,n.colorDefault&&"colorDefault"],img:["img"],fallback:["fallback"]};return(0,l.Z)(a,g,e)}(B);return Z=T?(0,m.jsx)(y,(0,o.Z)({alt:c,src:w,srcSet:j,sizes:G,ownerState:B,className:F.img},k)):null!=p?p:R&&c?c[0]:(0,m.jsx)(v,{className:F.fallback}),(0,m.jsx)(f,(0,o.Z)((0,o.Z)({as:b,ownerState:B,className:(0,r.default)(F.root,u),ref:e},P),{},{children:Z}))}))},662948:function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/grid",function(){return a(895046)}])},309318:function(n,e,a){"use strict";function t(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}a.d(e,{Z:function(){return t}})},963504:function(n,e,a){"use strict";a.d(e,{Z:function(){return m}});var t=a(875499),i=a(128274),o=a(982055);function s(n){return(s=i?o:function(n){return n.__proto__||o(n)})(n)}var r=a(41281),l=a(950093);function c(n){return(c="function"===typeof r&&"symbol"===typeof l?function(n){return typeof n}:function(n){return n&&"function"===typeof r&&n.constructor===r&&n!==r.prototype?"symbol":typeof n})(n)}var d=a(309318);function p(n,e){if(e&&("object"===c(e)||"function"===typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return(0,d.Z)(n)}function m(n){var e=function(){if("undefined"===typeof Reflect||!t)return!1;if(t.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(t(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var a,i=s(n);if(e){var o=s(this).constructor;a=t(i,arguments,o)}else a=i.apply(this,arguments);return p(this,a)}}},858748:function(n,e,a){"use strict";a.d(e,{Z:function(){return s}});var t=a(38401),i=a(128274);function o(n,e){return(o=i||function(n,e){return n.__proto__=e,n})(n,e)}function s(n,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=t(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&o(n,e)}}},function(n){n.O(0,[1622,8622,8272,5408,6950,1895,1353,7423,2245,2790,4921,8662,9596,994,5505,2853,274,7506,7418,521,9895,9774,2888,179],(function(){return e=662948,n(n.s=e);var e}));var e=n.O();_N_E=e}]);