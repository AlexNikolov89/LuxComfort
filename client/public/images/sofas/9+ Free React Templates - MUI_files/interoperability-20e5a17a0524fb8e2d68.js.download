(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6524],{266726:function(n,s,a){var t=a(911611),e=a(882846),p=a(491936),o=Math.max,c=Math.min;n.exports=function(n,s,a){var l,i,r,u,k,d,m=0,g=!1,h=!1,y=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function f(s){var a=l,t=i;return l=i=void 0,m=s,u=n.apply(t,a)}function b(n){return m=n,k=setTimeout(v,s),g?f(n):u}function w(n){var a=n-d;return void 0===d||a>=s||a<0||h&&n-m>=r}function v(){var n=e();if(w(n))return S(n);k=setTimeout(v,function(n){var a=s-(n-d);return h?c(a,r-(n-m)):a}(n))}function S(n){return k=void 0,y&&l?f(n):(l=i=void 0,u)}function x(){var n=e(),a=w(n);if(l=arguments,i=this,d=n,a){if(void 0===k)return b(d);if(h)return clearTimeout(k),k=setTimeout(v,s),f(d)}return void 0===k&&(k=setTimeout(v,s)),u}return s=p(s)||0,t(a)&&(g=!!a.leading,r=(h="maxWait"in a)?o(p(a.maxWait)||0,s):r,y="trailing"in a?!!a.trailing:y),x.cancel=function(){void 0!==k&&clearTimeout(k),m=0,l=d=i=k=void 0},x.flush=function(){return void 0===k?u:S(e())},x}},882846:function(n,s,a){var t=a(377400);n.exports=function(){return t.Date.now()}},819783:function(n,s,a){var t=a(266726),e=a(911611);n.exports=function(n,s,a){var p=!0,o=!0;if("function"!=typeof n)throw new TypeError("Expected a function");return e(a)&&(p="leading"in a?!!a.leading:p,o="trailing"in a?!!a.trailing:o),t(n,s,{leading:p,maxWait:s,trailing:o})}},728736:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return H}});a(827378);var t,e,p,o=a(461941),c=a(974931),l=a(33283),i=a(137436),r=a(896666),u=a(824246),k=(0,l.ZP)(i.ZP)(t||(t=(0,c.Z)(["\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n"])));var d,m=a(827255),g=a(950684),h=a(630122),y=(0,m.Z)({palette:{primary:{main:"#20b2aa"}}}),f=(0,l.ZP)(i.ZP)((function(n){var s=n.theme;return"\n  color: ".concat(s.palette.primary.main,";\n\n  :hover {\n    color: ").concat((0,g._j)(s.palette.primary.main,.2),";\n  }\n")}));var b,w,v,S,x,C=a(295649),j=a(659607),P=a(870480),M=a(655505),I=["className"],T=(0,l.ZP)((function(n){var s=n.className,a=(0,j.Z)(n,I);return(0,u.jsx)(M.Z,(0,C.Z)((0,C.Z)({},a),{},{classes:{popper:s}}))}))(b||(b=(0,c.Z)(["\n  & .MuiTooltip-tooltip {\n    background: navy;\n  }\n"])));var D=(0,l.ZP)(i.ZP)(v||(v=(0,c.Z)(["\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n\n  & .MuiSlider-thumb {\n    border-radius: 1px;\n  }\n"])));var N,V,U=a(910043),E=(a(677502),a(492198));a(655839),a(511594),u.Fragment;function z(n,s,a){return E.h.call(s,"css")?(0,u.jsx)(E.E,(0,E.c)(n,s),a):(0,u.jsx)(n,s,a)}const R={en:{description:"While you can use the emotion based styling solution provided by MUI to style your application, you can also use the one you already know and love (from plain CSS to styled-components).",location:"/docs/src/pages/guides/interoperability/interoperability.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Style Library Interoperability</h1><p class="description">While you can use the emotion based styling solution provided by MUI to style your application, you can also use the one you already know and love (from plain CSS to styled-components).</p>\n\n<p>This guide aims to document the most popular alternatives,\nbut you should find that the principles applied here can be adapted to other libraries.\nThere are examples for the following styling solutions:</p>\n<ul>\n<li><a href="#plain-css">Plain CSS</a></li>\n<li><a href="#global-css">Global CSS</a></li>\n<li><a href="#styled-components">Styled Components</a></li>\n<li><a href="#css-modules">CSS Modules</a></li>\n<li><a href="#emotion">Emotion</a></li>\n</ul>\n<h2 id="heading-plain-css"><span class="anchor-link" id="plain-css"></span>Plain CSS<a aria-labelledby="heading-plain-css" class="anchor-link-style" href="#plain-css" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Nothing fancy, just plain CSS.</p>\n',{demo:"pages/guides/interoperability/StyledComponents.js",hideToolbar:!0},'<p><a href="https://codesandbox.io/s/plain-css-fdue7"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Edit Button"></a></p>\n<p><strong>PlainCssSlider.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>PlainCssSlider.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@mui/material/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./PlainCssSlider.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssSlider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-css-injection-order"><span class="anchor-link" id="css-injection-order"></span>CSS injection order \u26a0\ufe0f<a aria-labelledby="heading-css-injection-order" class="anchor-link-style" href="#css-injection-order" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>Note:</strong> Most CSS-in-JS solutions inject their styles at the bottom of the HTML <code>&lt;head&gt;</code>, which gives MUI precedence over your custom styles. To remove the need for <strong>!important</strong>, you need to change the CSS injection order. Here&#39;s a demo of how it can be done in MUI:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. Now you can override MUI\'s styles. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyledEngineProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using emotion and have a custom cache in your app, that one will override the one coming from MUI. In order for the injection order to still be correct, you need to add the prepend option. Here is an example:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  key<span class="token operator">:</span> <span class="token string">\'css\'</span><span class="token punctuation">,</span>\n  prepend<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cache<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. Now you can override MUI\'s styles. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using styled-components and have <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>. If you are curious to see how it can be done, you can take a look on the <code>StylesProvider</code> implementation in the <code>@mui/styled-engine-sc</code> package.</p>\n<h3 id="heading-deeper-elements"><span class="anchor-link" id="deeper-elements"></span>Deeper elements<a aria-labelledby="heading-deeper-elements" class="anchor-link-style" href="#deeper-elements" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you attempt to style the Slider,\nyou will likely need to affect some of the Slider&#39;s child elements, for example the thumb.\nIn MUI, all child elements have an increased specificity of 2: <code>.parent .child {}</code>. When writing overrides, you need to do the same.</p>\n<p>The following examples override the slider&#39;s <code>thumb</code> style in addition to the custom styles on the slider itself.</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",hideToolbar:!0},'<p><strong>PlainCssSliderDeep1.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider .MuiSlider-thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>PlainCssSliderDeep1.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@mui/material/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./PlainCssSliderDeep1.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssSliderDeep1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>The above demo relies on the <a href="/styles/advanced/#with-material-ui-core">default <code>className</code> values</a>, but you can provide your own class name with the <code>componentsProps</code> API.</p>\n<p><strong>PlainCssSliderDeep2.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider .thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>PlainCssSliderDeep2.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@mui/material/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./PlainCssSliderDeep2.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssSliderDeep2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span>\n        <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider<span class="token punctuation">"</span></span>\n        <span class="token attr-name">componentsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> thumb<span class="token operator">:</span> <span class="token punctuation">{</span> className<span class="token operator">:</span> <span class="token string">\'thumb\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="heading-global-css"><span class="anchor-link" id="global-css"></span>Global CSS<a aria-labelledby="heading-global-css" class="anchor-link-style" href="#global-css" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Explicitly providing the class names to the component is too much effort?\n<a href="/styles/advanced/#with-material-ui-core">You can target the class names generated by MUI</a>.</p>\n<p><a href="https://codesandbox.io/s/global-classnames-dho8k"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Edit Button"></a></p>\n<p><strong>GlobalCssSlider.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.MuiSlider-root</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.MuiSlider-root:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>GlobalCssSlider.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@mui/material/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./GlobalCssSlider.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssSlider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-css-injection-order-2"><span class="anchor-link" id="css-injection-order-2"></span>CSS injection order \u26a0\ufe0f<a aria-labelledby="heading-css-injection-order-2" class="anchor-link-style" href="#css-injection-order-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>Note:</strong> Most CSS-in-JS solutions inject their styles at the bottom of the HTML <code>&lt;head&gt;</code>, which gives MUI precedence over your custom styles. To remove the need for <strong>!important</strong>, you need to change the CSS injection order. Here&#39;s a demo of how it can be done in MUI:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. Now you can override MUI\'s styles. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyledEngineProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using emotion and have a custom cache in your app, that one will override the one coming from MUI. In order for the injection order to still be correct, you need to add the prepend option. Here is an example:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  key<span class="token operator">:</span> <span class="token string">\'css\'</span><span class="token punctuation">,</span>\n  prepend<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cache<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. Now you can override MUI\'s styles. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using styled-components and have <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>. If you are curious to see how it can be done, you can take a look on the <code>StylesProvider</code> implementation in the <code>@mui/styled-engine-sc</code> package.</p>\n<h3 id="heading-deeper-elements-2"><span class="anchor-link" id="deeper-elements-2"></span>Deeper elements<a aria-labelledby="heading-deeper-elements-2" class="anchor-link-style" href="#deeper-elements-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you attempt to style the Slider,\nyou will likely need to affect some of the Slider&#39;s child elements, for example the thumb.\nIn MUI, all child elements have an increased specificity of 2: <code>.parent .child {}</code>. When writing overrides, you need to do the same.</p>\n<p>The following example overrides the slider&#39;s <code>thumb</code> style in addition to the custom styles on the slider itself.</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",hideToolbar:!0},'<p><strong>GlobalCssSliderDeep.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.MuiSlider-root</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.MuiSlider-root:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.MuiSlider-root .MuiSlider-thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>GlobalCssSliderDeep.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@mui/material/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./GlobalCssSliderDeep.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssSliderDeep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="heading-styled-components"><span class="anchor-link" id="styled-components"></span>Styled Components<a aria-labelledby="heading-styled-components" class="anchor-link-style" href="#styled-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><img src="https://img.shields.io/github/stars/styled-components/styled-components.svg?style=social&label=Star" alt="stars">\n<img src="https://img.shields.io/npm/dm/styled-components.svg" alt="npm"></p>\n<h3 id="heading-change-the-default-styled-engine"><span class="anchor-link" id="change-the-default-styled-engine"></span>Change the default styled engine<a aria-labelledby="heading-change-the-default-styled-engine" class="anchor-link-style" href="#change-the-default-styled-engine" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>By default, MUI components come with emotion as their style engine. If,\nhowever, you would like to use <code>styled-components</code>, you can configure your app by following the <a href="/guides/styled-engine/#how-to-switch-to-styled-components">styled engine guide</a> or starting with one of the example projects:</p>\n<ul>\n<li><a href="https://github.com/mui-org/material-ui/blob/next/examples/create-react-app-with-styled-components">Create React App with styled-components</a></li>\n<li><a href="https://github.com/mui-org/material-ui/blob/next/examples/create-react-app-with-styled-components-typescript">Create React App with styled-components and typescript</a></li>\n<li><a href="https://github.com/mui-org/material-ui/blob/next/examples/nextjs-with-styled-components-typescript">Next.js app with styled-components and TypeScript</a></li>\n</ul>\n<p>Following this approach reduces the bundle size, and removes the need to configure the CSS injection order.</p>\n<p>After the style engine is configured properly, you can use the <a href="/system/styled/"><code>styled()</code></a> utility\nfrom <code>@mui/material/styles</code> and have direct access to the theme.</p>\n',{demo:"pages/guides/interoperability/StyledComponents.js",hideToolbar:!0},'<p><a href="https://codesandbox.io/s/styled-components-interoperability-w9z9d"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Edit Button"></a></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@mui/material/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> CustomizedSlider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Slider<span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">StyledComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CustomizedSlider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-deeper-elements-3"><span class="anchor-link" id="deeper-elements-3"></span>Deeper elements<a aria-labelledby="heading-deeper-elements-3" class="anchor-link-style" href="#deeper-elements-3" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you attempt to style the Slider,\nyou will likely need to affect some of the Slider&#39;s child elements, for example the thumb.\nIn MUI, all child elements have an increased specificity of 2: <code>.parent .child {}</code>. When writing overrides, you need to do the same.</p>\n<p>The following examples override the slider&#39;s <code>thumb</code> style in addition to the custom styles on the slider itself.</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",defaultCodeOpen:!0},'<p>The above demo relies on the <a href="/styles/advanced/#with-material-ui-core">default <code>className</code> values</a>, but you can provide your own class name with the <code>componentsProps</code> API.</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@mui/material/Slider\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> CustomizedSlider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">componentsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> thumb<span class="token operator">:</span> <span class="token punctuation">{</span> className<span class="token operator">:</span> <span class="token string">\'thumb\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n\n  &amp; .thumb {\n    border-radius: 1px;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">StyledComponentsDeep2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CustomizedSlider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-theme"><span class="anchor-link" id="theme"></span>Theme<a aria-labelledby="heading-theme" class="anchor-link-style" href="#theme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>By using the MUI theme provider, the theme will be available in the theme context\nof the styled engine too (emotion or styled-components, depending on your configuration).</p>\n<blockquote>\n<p>\u26a0\ufe0f If you are <strong>already</strong> using a custom theme with styled-components or emotion,\nit might not be compatible with MUI&#39;s theme specification. If it&#39;s not\ncompatible, you need to render MUI&#39;s ThemeProvider <b>first</b>. This will\nensure the theme structures are isolated. This is ideal for the progressive adoption\nof MUI&#39;s components in the codebase.</p>\n</blockquote>\n<p>You are encouraged to share the same theme object between MUI and the rest of your project.</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> CustomizedSlider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Slider<span class="token punctuation">)</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n\n  :hover {\n    color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">darken</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n',{demo:"pages/guides/interoperability/StyledComponentsTheme.js"},'<h3 id="heading-portals"><span class="anchor-link" id="portals"></span>Portals<a aria-labelledby="heading-portals" class="anchor-link-style" href="#portals" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>The <a href="/components/portal/">Portal</a> provides a first-class way to render children into a DOM node that exists outside the DOM hierarchy of the parent component.\nBecause of the way styled-components scopes its CSS, you may run into issues where styling is not applied.</p>\n<p>For example, if you attempt to style the <code>tooltip</code> generated by the <a href="/components/tooltips/">Tooltip</a> component,\nyou will need to pass along the <code>className</code> property to the element being rendered outside of it&#39;s DOM hierarchy.\nThe following example shows a workaround:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@mui/material/Button\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Tooltip <span class="token keyword">from</span> <span class="token string">\'@mui/material/Tooltip\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> StyledTooltip <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> className<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">classes</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> popper<span class="token operator">:</span> className <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  &amp; .MuiTooltip-tooltip {\n    background: navy;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n</code></pre>\n',{demo:"pages/guides/interoperability/StyledComponentsPortal.js"},'<h2 id="heading-css-modules"><span class="anchor-link" id="css-modules"></span>CSS Modules<a aria-labelledby="heading-css-modules" class="anchor-link-style" href="#css-modules" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><img src="https://img.shields.io/github/stars/css-modules/css-modules.svg?style=social&label=Star" alt="stars"></p>\n<p>It&#39;s hard to know the market share of <a href="https://github.com/css-modules/css-modules">this styling solution</a> as it&#39;s dependent on the\nbundling solution people are using.</p>\n',{demo:"pages/guides/interoperability/StyledComponents.js",hideToolbar:!0},'<p><a href="https://codesandbox.io/s/css-modules-nuyg8"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Edit Button"></a></p>\n<p><strong>CssModulesSlider.module.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>CssModulesSlider.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@mui/material/Slider\'</span><span class="token punctuation">;</span>\n<span class="token comment">// webpack, parcel or else will inject the CSS into the page</span>\n<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./CssModulesSlider.module.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesSlider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>slider<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-css-injection-order-3"><span class="anchor-link" id="css-injection-order-3"></span>CSS injection order \u26a0\ufe0f<a aria-labelledby="heading-css-injection-order-3" class="anchor-link-style" href="#css-injection-order-3" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>Note:</strong> Most CSS-in-JS solutions inject their styles at the bottom of the HTML <code>&lt;head&gt;</code>, which gives MUI precedence over your custom styles. To remove the need for <strong>!important</strong>, you need to change the CSS injection order. Here&#39;s a demo of how it can be done in MUI:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. Now you can override MUI\'s styles. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyledEngineProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using emotion and have a custom cache in your app, that one will override the one coming from MUI. In order for the injection order to still be correct, you need to add the prepend option. Here is an example:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  key<span class="token operator">:</span> <span class="token string">\'css\'</span><span class="token punctuation">,</span>\n  prepend<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cache<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. Now you can override MUI\'s styles. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using styled-components and have <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>. If you are curious to see how it can be done, you can take a look on the <code>StylesProvider</code> implementation in the <code>@mui/styled-engine-sc</code> package.</p>\n<h3 id="heading-deeper-elements-4"><span class="anchor-link" id="deeper-elements-4"></span>Deeper elements<a aria-labelledby="heading-deeper-elements-4" class="anchor-link-style" href="#deeper-elements-4" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>If you attempt to style the Slider,\nyou will likely need to affect some of the Slider&#39;s child elements, for example the thumb.\nIn MUI, all child elements have an increased specificity of 2: <code>.parent .child {}</code>. When writing overrides, you need to do the same.</p>\n<p>The following examples override the slider&#39;s <code>thumb</code> style in addition to the custom styles on the slider itself.</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",hideToolbar:!0},'<p><strong>CssModulesSliderDeep1.module.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider .MuiSlider-thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>CssModulesSliderDeep1.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token comment">// webpack, parcel or else will inject the CSS into the page</span>\n<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./CssModulesSliderDeep1.module.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@mui/material/Slider\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesSliderDeep1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>slider<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>The above demo relies on the <a href="/styles/advanced/#with-material-ui-core">default <code>className</code> values</a>, but you can provide your own class name with the <code>componentsProps</code> API.</p>\n<p><strong>CssModulesSliderDeep2.module.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider .thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>CssModulesSliderDeep2.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token comment">// webpack, parcel or else will inject the CSS into the page</span>\n<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./CssModulesSliderDeep2.module.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@mui/material/Slider\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesSliderDeep2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span>\n        <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>slider<span class="token punctuation">}</span></span>\n        <span class="token attr-name">componentsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> thumb<span class="token operator">:</span> <span class="token punctuation">{</span> className<span class="token operator">:</span> styles<span class="token punctuation">.</span>thumb <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="heading-emotion"><span class="anchor-link" id="emotion"></span>Emotion<a aria-labelledby="heading-emotion" class="anchor-link-style" href="#emotion" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><img src="https://img.shields.io/github/stars/emotion-js/emotion.svg?style=social&label=Star" alt="stars">\n<img src="https://img.shields.io/npm/dm/@emotion/react.svg" alt="npm"></p>\n<h3 id="heading-the-css-prop"><span class="anchor-link" id="the-css-prop"></span>The <code>css</code> prop<a aria-labelledby="heading-the-css-prop" class="anchor-link-style" href="#the-css-prop" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Emotion&#39;s <strong>css()</strong> method works seamlessly with MUI.</p>\n',{demo:"pages/guides/interoperability/EmotionCSS.js",defaultCodeOpen:!0},'<h3 id="heading-theme-2"><span class="anchor-link" id="theme-2"></span>Theme<a aria-labelledby="heading-theme-2" class="anchor-link-style" href="#theme-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>It works exactly like styled components. You can <a href="/guides/interoperability/#styled-components">use the same guide</a>.</p>\n<h3 id="heading-the-styled-api"><span class="anchor-link" id="the-styled-api"></span>The <code>styled()</code> API<a aria-labelledby="heading-the-styled-api" class="anchor-link-style" href="#the-styled-api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>It works exactly like styled components. You can <a href="/guides/interoperability/#styled-components">use the same guide</a>.</p>\n'],toc:[{text:"Plain CSS",level:2,hash:"plain-css",children:[{text:"CSS injection order",level:3,hash:"css-injection-order"},{text:"Deeper elements",level:3,hash:"deeper-elements"}]},{text:"Global CSS",level:2,hash:"global-css",children:[{text:"CSS injection order",level:3,hash:"css-injection-order-2"},{text:"Deeper elements",level:3,hash:"deeper-elements-2"}]},{text:"Styled Components",level:2,hash:"styled-components",children:[{text:"Change the default styled engine",level:3,hash:"change-the-default-styled-engine"},{text:"Deeper elements",level:3,hash:"deeper-elements-3"},{text:"Theme",level:3,hash:"theme"},{text:"Portals",level:3,hash:"portals"}]},{text:"CSS Modules",level:2,hash:"css-modules",children:[{text:"CSS injection order",level:3,hash:"css-injection-order-3"},{text:"Deeper elements",level:3,hash:"deeper-elements-4"}]},{text:"Emotion",level:2,hash:"emotion",children:[{text:"The css prop",level:3,hash:"the-css-prop"},{text:"Theme",level:3,hash:"theme-2"},{text:"The styled(&#8203;) API",level:3,hash:"the-styled-api"}]}],title:"Style Library Interoperability",headers:{components:[]}},pt:{description:"Enquanto voc\xea pode usar a solu\xe7\xe3o de estilo baseada em emotion fornecida pelo Material-UI para estilizar sua aplica\xe7\xe3o, voc\xea tamb\xe9m pode usar o que voc\xea j\xe1 conhece e ama (desde CSS simples a styled-components).",location:"/docs/src/pages/guides/interoperability/interoperability-pt.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>Interoperabilidade da Biblioteca de Estilo</h1><p class="description">Enquanto voc\xea pode usar a solu\xe7\xe3o de estilo baseada em emotion fornecida pelo Material-UI para estilizar sua aplica\xe7\xe3o, voc\xea tamb\xe9m pode usar o que voc\xea j\xe1 conhece e ama (desde CSS simples a styled-components).</p>\n\n<p>Este guia tem como objetivo documentar as alternativas mais populares, mas voc\xea deve descobrir que os princ\xedpios aplicados aqui podem ser adaptados para outras bibliotecas. Existem exemplos para as seguintes solu\xe7\xf5es de estilo:</p>\n<ul>\n<li><a href="#plain-css">CSS puro</a></li>\n<li><a href="#global-css">CSS global</a></li>\n<li><a href="#styled-components">Styled Components</a></li>\n<li><a href="#css-modules">M\xf3dulos CSS</a></li>\n<li><a href="#emotion">Emotion</a></li>\n</ul>\n<h2 id="heading-plain-css"><span class="anchor-link" id="plain-css"></span>CSS puro<a aria-labelledby="heading-plain-css" class="anchor-link-style" href="#plain-css" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Nada extravagante, apenas CSS.</p>\n',{demo:"pages/guides/interoperability/StyledComponents.js",hideToolbar:!0},'<p><a href="https://codesandbox.io/s/plain-css-fdue7"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Bot\xe3o editar"></a></p>\n<p><strong>PlainCssSlider.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>PlainCssSlider.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./PlainCssSlider.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssSlider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-css-injection-order"><span class="anchor-link" id="css-injection-order"></span>Ordem de inje\xe7\xe3o do CSS \u26a0\ufe0f<a aria-labelledby="heading-css-injection-order" class="anchor-link-style" href="#css-injection-order" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>Nota:</strong> A maioria das solu\xe7\xf5es CSS-in-JS injetam seus estilos na parte inferior do HTML <code>&lt;head&gt;</code>, que d\xe1 preced\xeancia ao Material-UI sobre seus estilos customizados. Para remover a necessidade de <strong>!important</strong>, voc\xea precisa alterar a ordem de inje\xe7\xe3o do CSS. Here&#39;s a demo of how it can be done in Material-UI:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. import * as React from \'react\';\nimport { CacheProvider } from \'@emotion/react\';\nimport createCache from \'@emotion/cache\';\n\nconst cache = createCache({\n  key: \'css\',\n  prepend: true,\n});\n\nexport default function CssModulesPriority() {\n  return (\n    &lt;CacheProvider value={cache}>\n      {/* Sua \xe1rvore de componentes. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using emotion and have a custom cache in your app, that one will override the one coming from Material-UI. In order for the injection order to still be correct, you need to add the prepend option. Aqui est\xe1 um exemplo:</p>\n<pre><code class="language-jsx">Agora voc\xea pode sobrescrever os estilos <span class="token keyword">do</span> Material<span class="token operator">-</span><span class="token constant">UI</span><span class="token punctuation">.</span> <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StylesProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StylesProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. import * as React from \'react\';\nimport { CacheProvider } from \'@emotion/react\';\nimport createCache from \'@emotion/cache\';\n\nconst cache = createCache({\n  key: \'css\',\n  prepend: true,\n});\n\nexport default function CssModulesPriority() {\n  return (\n    &lt;CacheProvider value={cache}>\n      {/* Sua \xe1rvore de componentes. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StylesProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using styled-components and have <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>. If you are curious to see how it can be done, you can take a look on the <code>StylesProvider</code> implementation in the <code>@material-ui/styled-engine-sc</code> package.</p>\n<h3 id="heading-deeper-elements"><span class="anchor-link" id="deeper-elements"></span>Elementos mais profundos<a aria-labelledby="heading-deeper-elements" class="anchor-link-style" href="#deeper-elements" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Se voc\xea tentar estilizar o Slider, voc\xea provavelmente gostaria de afetar alguns dos elementos filhos de Slider, por exemplo o thumb. No Material-UI, todos os elementos filhos t\xeam uma especificidade aumentada de 2: <code>.parent .child {}</code>. Ao escrever uma sobrescrita, voc\xea precisa fazer o mesmo.</p>\n<p>Os exemplos a seguir substituem o estilo de <code>thumb</code> do controle slider, al\xe9m dos estilos customizados no slider em si.</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",hideToolbar:!0},'<p><strong>PlainCssSliderDeep1.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider . MuiSlider-thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>PlainCssSliderDeep1.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./PlainCssSliderDeep1.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssSliderDeep1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>A demonstra\xe7\xe3o acima depende dos <a href="/pt/styles/advanced/#with-material-ui-core">valores padr\xe3o de <code>className</code></a>, mas voc\xea pode fornecer seu pr\xf3prio nome de classe com a API <code>componentsProps</code>.</p>\n<p><strong>PlainCssSliderDeep2.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider .thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>PlainCssSliderDeep2.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./PlainCssSliderDeep2.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssSliderDeep2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span>\n        <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider<span class="token punctuation">"</span></span>\n        <span class="token attr-name">componentsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> thumb<span class="token operator">:</span> <span class="token punctuation">{</span> className<span class="token operator">:</span> <span class="token string">\'thumb\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="heading-global-css"><span class="anchor-link" id="global-css"></span>CSS global<a aria-labelledby="heading-global-css" class="anchor-link-style" href="#global-css" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>Fornecer explicitamente os nomes das classes ao componente \xe9 um esfor\xe7o excessivo? <a href="/pt/styles/advanced/#with-material-ui-core">Voc\xea pode segmentar os nomes de classe gerados por Material-UI</a>.</p>\n<p><a href="https://codesandbox.io/s/global-classnames-dho8k"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Bot\xe3o editar"></a></p>\n<p><strong>GlobalCssSlider.css</strong></p>\n<pre><code class="language-css"><span class="token selector">. MuiSlider-root</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">. MuiSlider-root:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>GlobalCssSlider.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./GlobalCssSlider.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssSlider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-css-injection-order-2"><span class="anchor-link" id="css-injection-order-2"></span>Ordem de inje\xe7\xe3o do CSS \u26a0\ufe0f<a aria-labelledby="heading-css-injection-order-2" class="anchor-link-style" href="#css-injection-order-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>Nota:</strong> A maioria das solu\xe7\xf5es CSS-in-JS injetam seus estilos na parte inferior do HTML <code>&lt;head&gt;</code>, que d\xe1 preced\xeancia ao Material-UI sobre seus estilos customizados. Para remover a necessidade de <strong>!important</strong>, voc\xea precisa alterar a ordem de inje\xe7\xe3o do CSS. Here&#39;s a demo of how it can be done in Material-UI:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. import * as React from \'react\';\nimport { CacheProvider } from \'@emotion/react\';\nimport createCache from \'@emotion/cache\';\n\nconst cache = createCache({\n  key: \'css\',\n  prepend: true,\n});\n\nexport default function CssModulesPriority() {\n  return (\n    &lt;CacheProvider value={cache}>\n      {/* Sua \xe1rvore de componentes. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using emotion and have a custom cache in your app, that one will override the one coming from Material-UI. In order for the injection order to still be correct, you need to add the prepend option. Aqui est\xe1 um exemplo:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  key<span class="token operator">:</span> <span class="token string">\'css\'</span><span class="token punctuation">,</span>\n  prepend<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cache<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Sua \xe1rvore de componentes. import * as React from \'react\';\nimport { CacheProvider } from \'@emotion/react\';\nimport createCache from \'@emotion/cache\';\n\nconst cache = createCache({\n  key: \'css\',\n  prepend: true,\n});\n\nexport default function CssModulesPriority() {\n  return (\n    &lt;CacheProvider value={cache}>\n      {/* Sua \xe1rvore de componentes. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StylesProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using styled-components and have <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>. If you are curious to see how it can be done, you can take a look on the <code>StylesProvider</code> implementation in the <code>@material-ui/styled-engine-sc</code> package.</p>\n<h3 id="heading-deeper-elements-2"><span class="anchor-link" id="deeper-elements-2"></span>Elementos mais profundos<a aria-labelledby="heading-deeper-elements-2" class="anchor-link-style" href="#deeper-elements-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Se voc\xea tentar estilizar o Slider, voc\xea provavelmente gostaria de afetar alguns dos elementos filhos de Slider, por exemplo o thumb. No Material-UI, todos os elementos filhos t\xeam uma especificidade aumentada de 2: <code>.parent .child {}</code>. Ao escrever uma sobrescrita, voc\xea precisa fazer o mesmo.</p>\n<p>O exemplo a seguir substituem o estilo de <code>thumb</code> do controle slider, al\xe9m dos estilos customizados no slider em si.</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",hideToolbar:!0},'<p><strong>GlobalCssSliderDeep.css</strong></p>\n<pre><code class="language-css"><span class="token selector">. MuiSlider-root</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">. MuiSlider-root:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">. MuiSlider-root . MuiSlider-thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>GlobalCssSliderDeep.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./GlobalCssSliderDeep.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssSliderDeep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="heading-styled-components"><span class="anchor-link" id="styled-components"></span>Styled Components<a aria-labelledby="heading-styled-components" class="anchor-link-style" href="#styled-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><img src="https://img.shields.io/github/stars/styled-components/styled-components.svg?style=social&label=Star" alt="estrelas"> <img src="https://img.shields.io/npm/dm/styled-components.svg" alt="npm"></p>\n<h3 id="heading-change-the-default-styled-engine"><span class="anchor-link" id="change-the-default-styled-engine"></span>Alterar o motor de estilo padr\xe3o<a aria-labelledby="heading-change-the-default-styled-engine" class="anchor-link-style" href="#change-the-default-styled-engine" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Por padr\xe3o, os componentes do Material-UI v\xeam com emotion como seu motor de estilo. Se, no entanto, voc\xea gostaria de usar <code>styled-components</code>, voc\xea pode configurar sua aplica\xe7\xe3o seguindo este <a href="https://github.com/mui-org/material-ui/blob/next/examples/create-react-app-with-styled-components">projeto de exemplo</a>. Seguir esta abordagem reduz o tamanho do pacote e remove a necessidade de configurar a ordem de inje\xe7\xe3o de CSS.</p>\n<p>After the style engine is configured properly, you can use the <a href="/pt/customization/styled/"><code>styled()</code></a> utility from <code>@material-ui/core/styles</code> and have direct access to the theme.</p>\n',{demo:"pages/guides/interoperability/StyledComponents.js",hideToolbar:!0},'<p><a href="https://codesandbox.io/s/styled-components-interoperability-w9z9d"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Bot\xe3o editar"></a></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> CustomizedSlider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Slider<span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">StyledComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CustomizedSlider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-deeper-elements-3"><span class="anchor-link" id="deeper-elements-3"></span>Elementos mais profundos<a aria-labelledby="heading-deeper-elements-3" class="anchor-link-style" href="#deeper-elements-3" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Se voc\xea tentar estilizar o Slider, voc\xea provavelmente gostaria de afetar alguns dos elementos filhos de Slider, por exemplo o thumb. No Material-UI, todos os elementos filhos t\xeam uma especificidade aumentada de 2: <code>.parent .child {}</code>. Ao escrever uma sobrescrita, voc\xea precisa fazer o mesmo.</p>\n<p>Os exemplos a seguir substituem o estilo de <code>thumb</code> do controle slider, al\xe9m dos estilos customizados no slider em si.</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",defaultCodeOpen:!0},'<p>A demonstra\xe7\xe3o acima depende dos <a href="/pt/styles/advanced/#with-material-ui-core">valores padr\xe3o de <code>className</code></a>, mas voc\xea pode fornecer seu pr\xf3prio nome de classe com a API <code>componentsProps</code>.</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> CustomizedSlider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">componentsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> thumb<span class="token operator">:</span> <span class="token punctuation">{</span> className<span class="token operator">:</span> <span class="token string">\'thumb\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n\n  &amp; .thumb {\n    border-radius: 1px;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">StyledComponentsDeep2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CustomizedSlider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-theme"><span class="anchor-link" id="theme"></span>Tema<a aria-labelledby="heading-theme" class="anchor-link-style" href="#theme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Ao usar o provedor de tema do Material-UI, o tema estar\xe1 dispon\xedvel no contexto do tema do motor de estilo tamb\xe9m (emotion ou styled-components, dependendo da sua configura\xe7\xe3o).</p>\n<blockquote>\n<p>\u26a0\ufe0f Se voc\xea j\xe1 <strong>estiver</strong> usando um tema customizando com styled-components ou emotion, ele pode n\xe3o ser compat\xedvel com a especifica\xe7\xe3o do tema do Material-UI. Se ele n\xe3o \xe9 compat\xedvel, voc\xea precisa renderizar o ThemeProvider  do Material-UI <b>primeiro</b>. Isto ir\xe1 garantir que as estruturas do tema estejam isoladas. Isso \xe9 ideal para a ado\xe7\xe3o progrressiva dos componentes da base de c\xf3digo do Material-UI.</p>\n</blockquote>\n<p>Voc\xea \xe9 encorajado a compartilhar o mesmo objeto de tema entre Material-UI e o resto de seu projeto.</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> CustomizedSlider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Slider<span class="token punctuation">)</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n\n  :hover {\n    color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">darken</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n',{demo:"pages/guides/interoperability/StyledComponentsTheme.js"},'<h3 id="heading-portals"><span class="anchor-link" id="portals"></span>Portais<a aria-labelledby="heading-portals" class="anchor-link-style" href="#portals" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>O <a href="/pt/components/portal/">Portal</a> fornece uma maneira de elegante para renderizar filhos em um n\xf3 DOM que existe fora da hierarquia DOM do componente pai. Devido a maneira como o escopo de CSS do styled-components funciona, voc\xea pode encontrar problemas nos quais o estilo n\xe3o \xe9 aplicado.</p>\n<p>For example, if you attempt to style the <code>tooltip</code> generated by the <a href="/pt/components/tooltips/">Tooltip</a> component, you will need to pass along the <code>className</code> property to the element being rendered outside of it&#39;s DOM hierarchy. O exemplo a seguir mostra uma solu\xe7\xe3o alternativa:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Button\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Tooltip <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Tooltip\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> StyledTooltip <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> className<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">classes</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> popper<span class="token operator">:</span> className <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  &amp; .MuiTooltip-tooltip {\n    background: navy;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n</code></pre>\n',{demo:"pages/guides/interoperability/StyledComponentsPortal.js"},'<h2 id="heading-css-modules"><span class="anchor-link" id="css-modules"></span>M\xf3dulos CSS<a aria-labelledby="heading-css-modules" class="anchor-link-style" href="#css-modules" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><img src="https://img.shields.io/github/stars/css-modules/css-modules.svg?style=social&label=Star" alt="estrelas"></p>\n<p>\xc9 dif\xedcil saber a participa\xe7\xe3o de mercado <a href="https://github.com/css-modules/css-modules">nesta solu\xe7\xe3o de estilo</a>, pois \xe9 dependente da solu\xe7\xe3o de empacotamento que as pessoas est\xe3o usando.</p>\n',{demo:"pages/guides/interoperability/StyledComponents.js",hideToolbar:!0},'<p><a href="https://codesandbox.io/s/css-modules-nuyg8"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="Bot\xe3o editar"></a></p>\n<p><strong>CssModulesSlider.module.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>CssModulesSlider.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token comment">// webpack, parcel or else will inject the CSS into the page</span>\n<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./CssModulesSlider.module.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesSlider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>slider<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-css-injection-order-3"><span class="anchor-link" id="css-injection-order-3"></span>Ordem de inje\xe7\xe3o do CSS \u26a0\ufe0f<a aria-labelledby="heading-css-injection-order-3" class="anchor-link-style" href="#css-injection-order-3" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>Nota:</strong> A maioria das solu\xe7\xf5es CSS-in-JS injetam seus estilos na parte inferior do HTML <code>&lt;head&gt;</code>, que d\xe1 preced\xeancia ao Material-UI sobre seus estilos customizados. Para remover a necessidade de <strong>!important</strong>, voc\xea precisa alterar a ordem de inje\xe7\xe3o do CSS. Here&#39;s a demo of how it can be done in Material-UI:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. import * as React from \'react\';\nimport { CacheProvider } from \'@emotion/react\';\nimport createCache from \'@emotion/cache\';\n\nconst cache = createCache({\n  key: \'css\',\n  prepend: true,\n});\n\nexport default function CssModulesPriority() {\n  return (\n    &lt;CacheProvider value={cache}>\n      {/* Sua \xe1rvore de componentes. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using emotion and have a custom cache in your app, that one will override the one coming from Material-UI. In order for the injection order to still be correct, you need to add the prepend option. Aqui est\xe1 um exemplo:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  key<span class="token operator">:</span> <span class="token string">\'css\'</span><span class="token punctuation">,</span>\n  prepend<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cache<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Sua \xe1rvore de componentes. import * as React from \'react\';\nimport { CacheProvider } from \'@emotion/react\';\nimport createCache from \'@emotion/cache\';\n\nconst cache = createCache({\n  key: \'css\',\n  prepend: true,\n});\n\nexport default function CssModulesPriority() {\n  return (\n    &lt;CacheProvider value={cache}>\n      {/* Sua \xe1rvore de componentes. */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StylesProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using styled-components and have <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>. If you are curious to see how it can be done, you can take a look on the <code>StylesProvider</code> implementation in the <code>@material-ui/styled-engine-sc</code> package.</p>\n<h3 id="heading-deeper-elements-4"><span class="anchor-link" id="deeper-elements-4"></span>Elementos mais profundos<a aria-labelledby="heading-deeper-elements-4" class="anchor-link-style" href="#deeper-elements-4" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Se voc\xea tentar estilizar o Slider, voc\xea provavelmente gostaria de afetar alguns dos elementos filhos de Slider, por exemplo o thumb. No Material-UI, todos os elementos filhos t\xeam uma especificidade aumentada de 2: <code>.parent .child {}</code>. Ao escrever uma sobrescrita, voc\xea precisa fazer o mesmo.</p>\n<p>Os exemplos a seguir substituem o estilo de <code>thumb</code> do controle slider, al\xe9m dos estilos customizados no slider em si.</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",hideToolbar:!0},'<p><strong>CssModulesSliderDeep1.module.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider . MuiSlider-thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>CssModulesSliderDeep1.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token comment">// webpack, parcel or else will inject the CSS into the page</span>\n<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./CssModulesSliderDeep1.module.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesSliderDeep1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>slider<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>A demonstra\xe7\xe3o acima depende dos <a href="/pt/styles/advanced/#with-material-ui-core">valores padr\xe3o de <code>className</code></a>, mas voc\xea pode fornecer seu pr\xf3prio nome de classe com a API <code>componentsProps</code>.</p>\n<p><strong>CssModulesSliderDeep2.module.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider .thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>CssModulesSliderDeep2.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token comment">// webpack, parcel or else will inject the CSS into the page</span>\n<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./CssModulesSliderDeep2.module.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesSliderDeep2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span>\n        <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>slider<span class="token punctuation">}</span></span>\n        <span class="token attr-name">componentsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> thumb<span class="token operator">:</span> <span class="token punctuation">{</span> className<span class="token operator">:</span> styles<span class="token punctuation">.</span>thumb <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="heading-emotion"><span class="anchor-link" id="emotion"></span>Emotion<a aria-labelledby="heading-emotion" class="anchor-link-style" href="#emotion" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><img src="https://img.shields.io/github/stars/emotion-js/emotion.svg?style=social&label=Star" alt="estrelas"> <img src="https://img.shields.io/npm/dm/@emotion/react.svg" alt="npm"></p>\n<h3 id="heading-the-css-prop"><span class="anchor-link" id="the-css-prop"></span>A propriedade <code>css</code><a aria-labelledby="heading-the-css-prop" class="anchor-link-style" href="#the-css-prop" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>O m\xe9todo <strong>css()</strong> do Emotion funciona perfeitamente com Material-UI.</p>\n',{demo:"pages/guides/interoperability/EmotionCSS.js",defaultCodeOpen:!0},'<h3 id="heading-theme-2"><span class="anchor-link" id="theme-2"></span>Tema<a aria-labelledby="heading-theme-2" class="anchor-link-style" href="#theme-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Funciona exatamente como styled components. Voc\xea pode <a href="/pt/guides/interoperability/#styled-components">usar o mesmo guia</a>.</p>\n<h3 id="heading-the-styled-api"><span class="anchor-link" id="the-styled-api"></span>A API <code>styled()</code><a aria-labelledby="heading-the-styled-api" class="anchor-link-style" href="#the-styled-api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Funciona exatamente como styled components. Voc\xea pode <a href="/pt/guides/interoperability/#styled-components">usar o mesmo guia</a>.</p>\n'],toc:[{text:"CSS puro",level:2,hash:"plain-css",children:[{text:"Ordem de inje\xe7\xe3o do CSS",level:3,hash:"css-injection-order"},{text:"Elementos mais profundos",level:3,hash:"deeper-elements"}]},{text:"CSS global",level:2,hash:"global-css",children:[{text:"Ordem de inje\xe7\xe3o do CSS",level:3,hash:"css-injection-order-2"},{text:"Elementos mais profundos",level:3,hash:"deeper-elements-2"}]},{text:"Styled Components",level:2,hash:"styled-components",children:[{text:"Alterar o motor de estilo padr\xe3o",level:3,hash:"change-the-default-styled-engine"},{text:"Elementos mais profundos",level:3,hash:"deeper-elements-3"},{text:"Tema",level:3,hash:"theme"},{text:"Portais",level:3,hash:"portals"}]},{text:"M\xf3dulos CSS",level:2,hash:"css-modules",children:[{text:"Ordem de inje\xe7\xe3o do CSS",level:3,hash:"css-injection-order-3"},{text:"Elementos mais profundos",level:3,hash:"deeper-elements-4"}]},{text:"Emotion",level:2,hash:"emotion",children:[{text:"A propriedade css",level:3,hash:"the-css-prop"},{text:"Tema",level:3,hash:"theme-2"},{text:"A API styled(&#8203;)",level:3,hash:"the-styled-api"}]}],title:"Interoperabilidade da Biblioteca de Estilo",headers:{components:[]}},zh:{description:"\u867d\u7136\u4f60\u53ef\u4ee5\u4f7f\u7528 Material-UI \u63d0\u4f9b\u7684\u57fa\u4e8e emotion \u7684\u6837\u5f0f\u89e3\u51b3\u65b9\u6848\u6765\u81ea\u5b9a\u4e49\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4f60\u5df2\u77e5\u548c\u559c\u6b22\u7684\u65b9\u6848\uff08\u4ece\u666e\u901a\u7684 CSS \u5230 styled-components\uff09\u3002",location:"/docs/src/pages/guides/interoperability/interoperability-zh.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n  <symbol id="anchor-link-icon" viewBox="0 0 16 16">\n    <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z" />\n  </symbol>\n</svg>','<h1>\u6837\u5f0f\u5e93\u7684\u4e92\u901a\u6027</h1><p class="description">\u867d\u7136\u4f60\u53ef\u4ee5\u4f7f\u7528 Material-UI \u63d0\u4f9b\u7684\u57fa\u4e8e emotion \u7684\u6837\u5f0f\u89e3\u51b3\u65b9\u6848\u6765\u81ea\u5b9a\u4e49\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4f60\u5df2\u77e5\u548c\u559c\u6b22\u7684\u65b9\u6848\uff08\u4ece\u666e\u901a\u7684 CSS \u5230 styled-components\uff09\u3002</p>\n\n<p>\u672c\u6307\u5357\u65e8\u5728\u5f52\u6863\u5f53\u524d\u6bd4\u8f83\u6d41\u884c\u7684\u4e00\u4e9b\u66ff\u4ee3\u65b9\u6848\uff0c\u4f46\u662f\u60a8\u4f1a\u53d1\u73b0\u5728\u8fd9\u91cc\u8fd0\u7528\u7684\u6cd5\u5219\uff0c\u4e5f\u53ef\u4ee5\u5728\u5176\u4ed6\u5e93\u91cc\u9002\u7528\u3002 \u6211\u4eec\u4e3a\u4ee5\u4e0b\u7684\u6837\u5f0f\u65b9\u6848\u63d0\u4f9b\u4e86\u4e00\u4e9b\u793a\u4f8b\uff1a</p>\n<ul>\n<li><a href="#plain-css">\u7eaf CSS</a></li>\n<li><a href="#global-css">\u5168\u5c40 CSS</a></li>\n<li><a href="#styled-components">Styled Components</a></li>\n<li><a href="#css-modules">CSS Modules</a></li>\n<li><a href="#css-modules">Emotion</a></li>\n</ul>\n<h2 id="heading-plain-css"><span class="anchor-link" id="plain-css"></span>\u7eaf CSS<a aria-labelledby="heading-plain-css" class="anchor-link-style" href="#plain-css" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u6ca1\u6709\u4ec0\u4e48\u7279\u522b\u82b1\u54e8\u7684\uff0c\u53ea\u662f\u7eaf CSS\u3002</p>\n',{demo:"pages/guides/interoperability/StyledComponents.js",hideToolbar:!0},'<p><a href="https://codesandbox.io/s/plain-css-fdue7"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="\u7f16\u8f91\u6309\u94ae"></a></p>\n<p><strong>PlainCssSlider.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>PlainCssSlider.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./PlainCssSlider.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssSlider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-css-injection-order"><span class="anchor-link" id="css-injection-order"></span>CSS \u6ce8\u5165\u987a\u5e8f\u26a0\ufe0f<a aria-labelledby="heading-css-injection-order" class="anchor-link-style" href="#css-injection-order" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>\u6ce8\u610f\uff1a</strong> \u5927\u591a\u6570\u7684 CSS-in-JS \u89e3\u51b3\u65b9\u6848\u662f\u5728 HTML <code>&lt;head&gt;</code> \u7684\u5e95\u90e8\u6ce8\u5165\u5b83\u4eec\u7684\u6837\u5f0f\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4f60\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u88ab Material-UI \u7684\u6837\u5f0f\u89c4\u5219\u6240\u8986\u76d6\u3002 \u5982\u679c\u4f60\u6709\u79fb\u9664 <strong>!important</strong> \u7684\u9700\u6c42\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6539\u53d8 CSS \u6ce8\u5165\u987a\u5e8f\u3002 Here&#39;s a demo of how it can be done in Material-UI:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. \u73b0\u5728\u4f60\u53ef\u4ee5\u8986\u76d6 Material-UI \u7684\u6837\u5f0f\u3002 */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyledEngineProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using emotion and have a custom cache in your app, that one will override the one coming from Material-UI. In order for the injection order to still be correct, you need to add the prepend option. \u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  key<span class="token operator">:</span> <span class="token string">\'css\'</span><span class="token punctuation">,</span>\n  prepend<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cache<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span>\u8fd9\u91cc\u7f16\u5199\u4f60\u7684\u7ec4\u4ef6\u6811\u3002 \u73b0\u5728\u4f60\u53ef\u4ee5\u8986\u76d6 Material<span class="token operator">-</span><span class="token constant">UI</span> \u7684\u6837\u5f0f\u3002 <span class="token operator">*</span><span class="token operator">/</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using styled-components and have <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>. If you are curious to see how it can be done, you can take a look on the <code>StylesProvider</code> implementation in the <code>@material-ui/styled-engine-sc</code> package.</p>\n<h3 id="heading-deeper-elements"><span class="anchor-link" id="deeper-elements"></span>\u66f4\u6df1\u5c42\u7684\u5143\u7d20<a aria-labelledby="heading-deeper-elements" class="anchor-link-style" href="#deeper-elements" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5982\u679c\u4f60\u8bd5\u56fe\u81ea\u5b9a\u4e49\u6ed1\u5757\u7684\u6837\u5f0f\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u6ed1\u5757\u7684\u4e00\u4e9b\u5b50\u5143\u7d20\uff0c\u4f8b\u5982\u6eda\u52a8\u6761\u7684\u7bad\u5934\uff08thumb\uff09\u3002 \u5728 Material-UI \u4e2d\uff0c\u6240\u6709\u7684\u5b50\u5143\u7d20\u90fd\u589e\u52a0\u4e86\u4e24\u5c42\u7684\u7279\u5b9a\u7c7b\uff1a<code>.parent .child {}</code>\u3002 \u6240\u4ee5\u5728\u7f16\u5199\u8986\u76d6\u6837\u5f0f\u7684\u65f6\u5019\uff0c\u4f60\u4e5f\u9700\u8981\u8fd9\u6837\u505a\u3002</p>\n<p>\u4ee5\u4e0b\u793a\u4f8b\u9664\u4e86\u8986\u76d6\u6ed1\u5757\u672c\u8eab\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u5916\uff0c\u8fd8\u8986\u76d6\u4e86\u6ed1\u5757\u7684 <code>thumb</code> \u6837\u5f0f\u3002</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",hideToolbar:!0},'<p><strong>PlainCssSliderDeep1.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider .MuiSlider-thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>PlainCssSliderDeep1.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./PlainCssSliderDeep1.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssSliderDeep1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>\u4e0a\u9762\u7684\u6f14\u793a\u4f9d\u8d56\u4e8e <a href="/zh/styles/advanced/#with-material-ui-core">\u9ed8\u8ba4\u7684<code>className</code>\u503c</a>\uff0c\u4f46\u662f\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>componentsProps</code> API \u6765\u63d0\u4f9b\u4f60\u81ea\u5df1\u7684\u7c7b\u540d\u3002</p>\n<p><strong>PlainCssSliderDeep2.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider .thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>PlainCssSliderDeep2.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./PlainCssSliderDeep2.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">PlainCssSliderDeep2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span>\n        <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>slider<span class="token punctuation">"</span></span>\n        <span class="token attr-name">componentsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> thumb<span class="token operator">:</span> <span class="token punctuation">{</span> className<span class="token operator">:</span> <span class="token string">\'thumb\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="heading-global-css"><span class="anchor-link" id="global-css"></span>\u5168\u5c40 CSS<a aria-labelledby="heading-global-css" class="anchor-link-style" href="#global-css" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p>\u660e\u786e\u5411\u63d0\u7ec4\u4ef6\u63d0\u4f9b\u7c7b\u540d\u662f\u4e0d\u662f\u592a\u5927\u8d39\u5468\u7ae0\u4e86\uff1f <a href="/zh/styles/advanced/#with-material-ui-core">\u60a8\u53ef\u4ee5\u5b9a\u4f4d\u5230\u7531 Material-UI \u751f\u6210\u7684\u7c7b\u540d</a>\u3002</p>\n<p><a href="https://codesandbox.io/s/global-classnames-dho8k"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="\u7f16\u8f91\u6309\u94ae"></a></p>\n<p><strong>GlobalCssSlider.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.MuiSlider-root</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.MuiSlider-root:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>GlobalCssSlider.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./GlobalCssSlider.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssSlider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-css-injection-order-2"><span class="anchor-link" id="css-injection-order-2"></span>CSS \u6ce8\u5165\u987a\u5e8f\u26a0\ufe0f<a aria-labelledby="heading-css-injection-order-2" class="anchor-link-style" href="#css-injection-order-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>\u6ce8\u610f\uff1a</strong> \u5927\u591a\u6570\u7684 CSS-in-JS \u89e3\u51b3\u65b9\u6848\u662f\u5728 HTML <code>&lt;head&gt;</code> \u7684\u5e95\u90e8\u6ce8\u5165\u5b83\u4eec\u7684\u6837\u5f0f\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4f60\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u88ab Material-UI \u7684\u6837\u5f0f\u89c4\u5219\u6240\u8986\u76d6\u3002 \u5982\u679c\u4f60\u6709\u79fb\u9664 <strong>!important</strong> \u7684\u9700\u6c42\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6539\u53d8 CSS \u6ce8\u5165\u987a\u5e8f\u3002 Here&#39;s a demo of how it can be done in Material-UI:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. \u73b0\u5728\u4f60\u53ef\u4ee5\u8986\u76d6 Material-UI \u7684\u6837\u5f0f\u3002 */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyledEngineProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using emotion and have a custom cache in your app, that one will override the one coming from Material-UI. In order for the injection order to still be correct, you need to add the prepend option. \u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  key<span class="token operator">:</span> <span class="token string">\'css\'</span><span class="token punctuation">,</span>\n  prepend<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cache<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* \u8fd9\u91cc\u7f16\u5199\u4f60\u7684\u7ec4\u4ef6\u6811\u3002 \u73b0\u5728\u4f60\u53ef\u4ee5\u8986\u76d6 Material-UI \u7684\u6837\u5f0f\u3002 */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using styled-components and have <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>. If you are curious to see how it can be done, you can take a look on the <code>StylesProvider</code> implementation in the <code>@material-ui/styled-engine-sc</code> package.</p>\n<h3 id="heading-deeper-elements-2"><span class="anchor-link" id="deeper-elements-2"></span>\u66f4\u6df1\u5c42\u7684\u5143\u7d20<a aria-labelledby="heading-deeper-elements-2" class="anchor-link-style" href="#deeper-elements-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5982\u679c\u4f60\u8bd5\u56fe\u81ea\u5b9a\u4e49\u6ed1\u5757\u7684\u6837\u5f0f\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u6ed1\u5757\u7684\u4e00\u4e9b\u5b50\u5143\u7d20\uff0c\u4f8b\u5982\u6eda\u52a8\u6761\u7684\u7bad\u5934\uff08thumb\uff09\u3002 \u5728 Material-UI \u4e2d\uff0c\u6240\u6709\u7684\u5b50\u5143\u7d20\u90fd\u589e\u52a0\u4e86\u4e24\u5c42\u7684\u7279\u5b9a\u7c7b\uff1a<code>.parent .child {}</code>\u3002 \u6240\u4ee5\u5728\u7f16\u5199\u8986\u76d6\u6837\u5f0f\u7684\u65f6\u5019\uff0c\u4f60\u4e5f\u9700\u8981\u8fd9\u6837\u505a\u3002</p>\n<p>\u4ee5\u4e0b\u793a\u4f8b\u9664\u4e86\u8986\u76d6\u6ed1\u5757\u672c\u8eab\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u5916\uff0c\u8fd8\u8986\u76d6\u4e86\u6ed1\u5757\u7684 <code>thumb</code> \u6837\u5f0f\u3002</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",hideToolbar:!0},'<p><strong>GlobalCssSliderDeep.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.MuiSlider-root</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.MuiSlider-root:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.MuiSlider-root .MuiSlider-thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>GlobalCssSliderDeep.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'./GlobalCssSliderDeep.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssSliderDeep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="heading-styled-components"><span class="anchor-link" id="styled-components"></span>Styled Components<a aria-labelledby="heading-styled-components" class="anchor-link-style" href="#styled-components" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><img src="https://img.shields.io/github/stars/styled-components/styled-components.svg?style=social&label=Star" alt="stars"> <img src="https://img.shields.io/npm/dm/styled-components.svg" alt="npm"></p>\n<h3 id="heading-change-the-default-styled-engine"><span class="anchor-link" id="change-the-default-styled-engine"></span>\u6539\u53d8\u9ed8\u8ba4\u7684\u6837\u5f0f\u5f15\u64ce<a aria-labelledby="heading-change-the-default-styled-engine" class="anchor-link-style" href="#change-the-default-styled-engine" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMaterial-UI \u7ec4\u4ef6\u4f7f\u7528 emotion \u6765\u4f5c\u4e3a\u5b83\u4eec\u7684\u6837\u5f0f\u5f15\u64ce\u3002 \u4f46\u662f\uff0c\u5982\u679c\u4f60\u60f3\u4f7f\u7528 <code>styled-components</code> \u7684\u8bdd\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e2a <a href="https://github.com/mui-org/material-ui/blob/next/examples/create-react-app-with-styled-components">\u793a\u4f8b\u9879\u76ee</a> \u6765\u914d\u7f6e\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 \u6309\u7167\u8fd9\u79cd\u65b9\u6cd5\u6765\u914d\u7f6e\u7684\u8bdd\uff0c\u5219\u53ef\u4ee5\u51cf\u5c11\u6346\u7ed1\u5305\u7684\u5927\u5c0f\uff0c\u5e76\u4e14\u65e0\u9700\u914d\u7f6e CSS \u6ce8\u5165\u987a\u5e8f\u3002</p>\n<p>After the style engine is configured properly, you can use the <a href="/zh/customization/styled/"><code>styled()</code></a> utility from <code>@material-ui/core/styles</code> and have direct access to the theme.</p>\n',{demo:"pages/guides/interoperability/StyledComponents.js",hideToolbar:!0},'<p><a href="https://codesandbox.io/s/styled-components-interoperability-w9z9d"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="\u7f16\u8f91\u6309\u94ae"></a></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> CustomizedSlider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Slider<span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">StyledComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CustomizedSlider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-deeper-elements-3"><span class="anchor-link" id="deeper-elements-3"></span>\u66f4\u6df1\u5c42\u7684\u5143\u7d20<a aria-labelledby="heading-deeper-elements-3" class="anchor-link-style" href="#deeper-elements-3" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5982\u679c\u4f60\u8bd5\u56fe\u81ea\u5b9a\u4e49\u6ed1\u5757\u7684\u6837\u5f0f\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u6ed1\u5757\u7684\u4e00\u4e9b\u5b50\u5143\u7d20\uff0c\u4f8b\u5982\u6eda\u52a8\u6761\u7684\u7bad\u5934\uff08thumb\uff09\u3002 \u5728 Material-UI \u4e2d\uff0c\u6240\u6709\u7684\u5b50\u5143\u7d20\u90fd\u589e\u52a0\u4e86\u4e24\u5c42\u7684\u7279\u5b9a\u7c7b\uff1a<code>.parent .child {}</code>\u3002 \u6240\u4ee5\u5728\u7f16\u5199\u8986\u76d6\u6837\u5f0f\u7684\u65f6\u5019\uff0c\u4f60\u4e5f\u9700\u8981\u8fd9\u6837\u505a\u3002</p>\n<p>\u4ee5\u4e0b\u793a\u4f8b\u9664\u4e86\u8986\u76d6\u6ed1\u5757\u672c\u8eab\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u5916\uff0c\u8fd8\u8986\u76d6\u4e86\u6ed1\u5757\u7684 <code>thumb</code> \u6837\u5f0f\u3002</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",defaultCodeOpen:!0},'<p>\u4e0a\u9762\u7684\u6f14\u793a\u4f9d\u8d56\u4e8e <a href="/zh/styles/advanced/#with-material-ui-core">\u9ed8\u8ba4\u7684<code>className</code>\u503c</a>\uff0c\u4f46\u662f\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>componentsProps</code> API \u6765\u63d0\u4f9b\u4f60\u81ea\u5df1\u7684\u7c7b\u540d\u3002</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> CustomizedSlider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">componentsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> thumb<span class="token operator">:</span> <span class="token punctuation">{</span> className<span class="token operator">:</span> <span class="token string">\'thumb\'</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n\n  &amp; .thumb {\n    border-radius: 1px;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">StyledComponentsDeep2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CustomizedSlider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-theme"><span class="anchor-link" id="theme"></span>\u4e3b\u9898<a aria-labelledby="heading-theme" class="anchor-link-style" href="#theme" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u901a\u8fc7\u4f7f\u7528 Material-UI \u4e3b\u9898\u63d0\u4f9b\u8005\uff08theme provider\uff09\uff0c\u8be5\u4e3b\u9898\u4e5f\u53ef\u4ee5\u5728\u6837\u5f0f\u5f15\u64ce\u7684\u4e3b\u9898\u4e0a\u4e0b\u6587\u4e2d\u53ef\u7528\uff08emotion \u6216 styled-components\uff0c\u53d6\u51b3\u4e8e\u4f60\u7684\u914d\u7f6e\uff09\u3002</p>\n<blockquote>\n<p>\u26a0\ufe0f\u5982\u679c\u4f60<strong>\u5df2\u7ecf</strong>\u4f7f\u7528\u4e86 styled-component \u6216 emotion \u9a71\u52a8\u7684\u81ea\u5b9a\u4e49\u4e3b\u9898\uff0c\u90a3\u4e48\u5b83\u53ef\u80fd\u4f1a\u4e0d\u517c\u5bb9 Material-UI \u7684\u4e3b\u9898\u89c4\u8303\u3002 \u5982\u679c\u5b83\u4e0d\u517c\u5bb9\uff0c\u90a3\u4e48\u4f60\u9700\u8981<b>\u5148</b>\u6e32\u67d3 Material-UI \u7684 ThemeProvider\u3002 \u8fd9\u6837\u505a\u5c31\u53ef\u4ee5\u786e\u4fdd\u4e3b\u9898\u7ed3\u6784\u7684\u9694\u79bb\u3002 \u8fd9\u5bf9\u4e8e\u60f3\u8981\u5728\u4ee3\u7801\u5e93\u4e2d\u6e10\u8fdb\u5f0f\u5730\u4f7f\u7528 Material-UI \u7ec4\u4ef6\u662f\u975e\u5e38\u7406\u60f3\u7684\u3002</p>\n</blockquote>\n<p>\u6211\u4eec\u9f13\u52b1\u4f60\u5728 Material-UI \u548c\u4f60\u9879\u76ee\u7684\u5176\u4ed6\u90e8\u5206\u4e4b\u95f4\u5171\u4eab\u76f8\u540c\u7684\u4e3b\u9898\u5bf9\u8c61\u3002</p>\n<pre><code class="language-jsx"><span class="token keyword">const</span> CustomizedSlider <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Slider<span class="token punctuation">)</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n\n  :hover {\n    color: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">darken</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>main<span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n',{demo:"pages/guides/interoperability/StyledComponentsTheme.js"},'<h3 id="heading-portals"><span class="anchor-link" id="portals"></span>Portals\uff08\u4f20\u9001\u95e8\u7ec4\u4ef6\uff09<a aria-labelledby="heading-portals" class="anchor-link-style" href="#portals" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><a href="/zh/components/portal/">\u4f20\u9001\u95e8\u7ec4\u4ef6</a>\u63d0\u4f9b\u4e86\u4e00\u79cd\u4e00\u6d41\u7684\u65b9\u6cd5\uff0c\u5b83\u5c06\u5b50\u5143\u7d20\u6e32\u67d3\u5728\u5176\u7236\u7ec4\u4ef6\u7684 DOM \u5c42\u6b21\u7ed3\u6784\u4e4b\u5916\u7684 DOM \u8282\u70b9\u4e2d\u3002 \u5f53\u60a8\u4f7f\u7528\u8fd9\u6837\u7684 styled-components \u89c4\u8303\u5176 CSS \u7684\u65b9\u5f0f\u65f6\uff0c\u53ef\u80fd\u4f1a\u9047\u5230\u4e00\u4e9b\u65e0\u6cd5\u9644\u7740\u6837\u5f0f\u7684\u95ee\u9898\u3002</p>\n<p>For example, if you attempt to style the <code>tooltip</code> generated by the <a href="/zh/components/tooltips/">Tooltip</a> component, you will need to pass along the <code>className</code> property to the element being rendered outside of it&#39;s DOM hierarchy. \u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u4e00\u4e2a\u53d8\u901a\u529e\u6cd5\uff1a</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Button\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Tooltip <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Tooltip\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> StyledTooltip <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> className<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">classes</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> popper<span class="token operator">:</span> className <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  &amp; .MuiTooltip-tooltip {\n    background: navy;\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n</code></pre>\n',{demo:"pages/guides/interoperability/StyledComponentsPortal.js"},'<h2 id="heading-css-modules"><span class="anchor-link" id="css-modules"></span>CSS Modules<a aria-labelledby="heading-css-modules" class="anchor-link-style" href="#css-modules" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><img src="https://img.shields.io/github/stars/css-modules/css-modules.svg?style=social&label=Star" alt="stars"></p>\n<p>\u9274\u4e8e\u5b83\u5168\u6743\u4f9d\u8d56\u4e8e\u5927\u5bb6\u4f7f\u7528\u7684\u6253\u5305\u65b9\u6848\uff0c\u6211\u4eec\u5f88\u96be\u5f97\u77e5 <a href="https://github.com/css-modules/css-modules">\u6b64\u79cd\u6837\u5f0f\u65b9\u6848</a> \u7684\u5e02\u573a\u5360\u6709\u7387\u3002</p>\n',{demo:"pages/guides/interoperability/StyledComponents.js",hideToolbar:!0},'<p><a href="https://codesandbox.io/s/css-modules-nuyg8"><img src="https://codesandbox.io/static/img/play-codesandbox.svg" alt="\u7f16\u8f91\u6309\u94ae"></a></p>\n<p><strong>CssModulesSlider.module.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>CssModulesSlider.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n<span class="token comment">// webpack, parcel or else will inject the CSS into the page</span>\n<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./CssModulesSlider.module.css\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesSlider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>slider<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h3 id="heading-css-injection-order-3"><span class="anchor-link" id="css-injection-order-3"></span>CSS \u6ce8\u5165\u987a\u5e8f\u26a0\ufe0f<a aria-labelledby="heading-css-injection-order-3" class="anchor-link-style" href="#css-injection-order-3" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p><strong>\u6ce8\u610f\uff1a</strong> \u5927\u591a\u6570\u7684 CSS-in-JS \u89e3\u51b3\u65b9\u6848\u662f\u5728 HTML <code>&lt;head&gt;</code> \u7684\u5e95\u90e8\u6ce8\u5165\u5b83\u4eec\u7684\u6837\u5f0f\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4f60\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u88ab Material-UI \u7684\u6837\u5f0f\u89c4\u5219\u6240\u8986\u76d6\u3002 \u5982\u679c\u4f60\u6709\u79fb\u9664 <strong>!important</strong> \u7684\u9700\u6c42\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u6539\u53d8 CSS \u6ce8\u5165\u987a\u5e8f\u3002 Here&#39;s a demo of how it can be done in Material-UI:</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> StyledEngineProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">GlobalCssPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StyledEngineProvider</span></span> <span class="token attr-name">injectFirst</span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* Your component tree. \u73b0\u5728\u4f60\u53ef\u4ee5\u8986\u76d6 Material-UI \u7684\u6837\u5f0f\u3002 */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">StyledEngineProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using emotion and have a custom cache in your app, that one will override the one coming from Material-UI. In order for the injection order to still be correct, you need to add the prepend option. \u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a</p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> CacheProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@emotion/react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> createCache <span class="token keyword">from</span> <span class="token string">\'@emotion/cache\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> cache <span class="token operator">=</span> <span class="token function">createCache</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  key<span class="token operator">:</span> <span class="token string">\'css\'</span><span class="token punctuation">,</span>\n  prepend<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesPriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">CacheProvider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cache<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n      <span class="token punctuation">{</span><span class="token comment">/* \u8fd9\u91cc\u7f16\u5199\u4f60\u7684\u7ec4\u4ef6 \u73b0\u5728\u4f60\u53ef\u4ee5\u8986\u76d6 Material-UI \u7684\u6837\u5f0f\u3002 */</span><span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">CacheProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> If you are using styled-components and have <code>StyleSheetManager</code> with a custom <code>target</code>, make sure that the target is the first element in the HTML <code>&lt;head&gt;</code>. If you are curious to see how it can be done, you can take a look on the <code>StylesProvider</code> implementation in the <code>@material-ui/styled-engine-sc</code> package.</p>\n<h3 id="heading-deeper-elements-4"><span class="anchor-link" id="deeper-elements-4"></span>\u66f4\u6df1\u5c42\u7684\u5143\u7d20<a aria-labelledby="heading-deeper-elements-4" class="anchor-link-style" href="#deeper-elements-4" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5982\u679c\u4f60\u8bd5\u56fe\u81ea\u5b9a\u4e49\u6ed1\u5757\u7684\u6837\u5f0f\uff0c\u90a3\u4e48\u5f88\u53ef\u80fd\u4f1a\u5f71\u54cd\u5230\u6ed1\u5757\u7684\u4e00\u4e9b\u5b50\u5143\u7d20\uff0c\u4f8b\u5982\u6eda\u52a8\u6761\u7684\u7bad\u5934\uff08thumb\uff09\u3002 \u5728 Material-UI \u4e2d\uff0c\u6240\u6709\u7684\u5b50\u5143\u7d20\u90fd\u589e\u52a0\u4e86\u4e24\u5c42\u7684\u7279\u5b9a\u7c7b\uff1a<code>.parent .child {}</code>\u3002 \u6240\u4ee5\u5728\u7f16\u5199\u8986\u76d6\u6837\u5f0f\u7684\u65f6\u5019\uff0c\u4f60\u4e5f\u9700\u8981\u8fd9\u6837\u505a\u3002</p>\n<p>\u4ee5\u4e0b\u793a\u4f8b\u9664\u4e86\u8986\u76d6\u6ed1\u5757\u672c\u8eab\u7684\u81ea\u5b9a\u4e49\u6837\u5f0f\u5916\uff0c\u8fd8\u8986\u76d6\u4e86\u6ed1\u5757\u7684 <code>thumb</code> \u6837\u5f0f\u3002</p>\n',{demo:"pages/guides/interoperability/StyledComponentsDeep.js",hideToolbar:!0},'<p><strong>CssModulesSliderDeep1.module.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider .MuiSlider-thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>CssModulesSliderDeep1.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token comment">// webpack, parcel or else will inject the CSS into the page</span>\n<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./CssModulesSliderDeep1.module.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesSliderDeep1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>slider<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p>\u4e0a\u9762\u7684\u6f14\u793a\u4f9d\u8d56\u4e8e <a href="/zh/styles/advanced/#with-material-ui-core">\u9ed8\u8ba4\u7684<code>className</code>\u503c</a>\uff0c\u4f46\u662f\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>componentsProps</code> API \u6765\u63d0\u4f9b\u4f60\u81ea\u5df1\u7684\u7c7b\u540d\u3002</p>\n<p><strong>CssModulesSliderDeep2.module.css</strong></p>\n<pre><code class="language-css"><span class="token selector">.slider</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #20b2aa<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider:hover</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #2e8b57<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.slider .thumb</span> <span class="token punctuation">{</span>\n  <span class="token property">border-radius</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>CssModulesSliderDeep2.js</strong></p>\n<pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token comment">// webpack, parcel or else will inject the CSS into the page</span>\n<span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">\'./CssModulesSliderDeep2.module.css\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Slider <span class="token keyword">from</span> <span class="token string">\'@material-ui/core/Slider\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">CssModulesSliderDeep2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span> <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Slider</span></span>\n        <span class="token attr-name">defaultValue</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">30</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>slider<span class="token punctuation">}</span></span>\n        <span class="token attr-name">componentsProps</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> thumb<span class="token operator">:</span> <span class="token punctuation">{</span> className<span class="token operator">:</span> styles<span class="token punctuation">.</span>thumb <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<h2 id="heading-emotion"><span class="anchor-link" id="emotion"></span>Emotion<a aria-labelledby="heading-emotion" class="anchor-link-style" href="#emotion" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h2><p><img src="https://img.shields.io/github/stars/emotion-js/emotion.svg?style=social&label=Star" alt="stars"> <img src="https://img.shields.io/npm/dm/@emotion/react.svg" alt="npm"></p>\n<h3 id="heading-the-css-prop"><span class="anchor-link" id="the-css-prop"></span><code>css</code> \u5c5e\u6027<a aria-labelledby="heading-the-css-prop" class="anchor-link-style" href="#the-css-prop" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>Emotion \u7684 <strong>css()</strong> \u65b9\u6cd5\u4e0e Material-UI \u65e0\u7f1d\u534f\u4f5c\u3002</p>\n',{demo:"pages/guides/interoperability/EmotionCSS.js",defaultCodeOpen:!0},'<h3 id="heading-theme-2"><span class="anchor-link" id="theme-2"></span>\u4e3b\u9898<a aria-labelledby="heading-theme-2" class="anchor-link-style" href="#theme-2" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5b83\u4f1a\u50cf styled components \u4e00\u6837\u8d77\u4f5c\u7528\u3002 \u60a8\u53ef\u4ee5 <a href="/zh/guides/interoperability/#styled-components">\u4f7f\u7528\u76f8\u540c\u7684\u6307\u5357</a> \u3002</p>\n<h3 id="heading-the-styled-api"><span class="anchor-link" id="the-styled-api"></span><code>styled()</code> API<a aria-labelledby="heading-the-styled-api" class="anchor-link-style" href="#the-styled-api" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a></h3><p>\u5b83\u4f1a\u50cf styled components \u4e00\u6837\u8d77\u4f5c\u7528\u3002 \u60a8\u53ef\u4ee5 <a href="/zh/guides/interoperability/#styled-components">\u4f7f\u7528\u76f8\u540c\u7684\u6307\u5357</a> \u3002</p>\n'],toc:[{text:"\u7eaf CSS",level:2,hash:"plain-css",children:[{text:"CSS \u6ce8\u5165\u987a\u5e8f",level:3,hash:"css-injection-order"},{text:"\u66f4\u6df1\u5c42\u7684\u5143\u7d20",level:3,hash:"deeper-elements"}]},{text:"\u5168\u5c40 CSS",level:2,hash:"global-css",children:[{text:"CSS \u6ce8\u5165\u987a\u5e8f",level:3,hash:"css-injection-order-2"},{text:"\u66f4\u6df1\u5c42\u7684\u5143\u7d20",level:3,hash:"deeper-elements-2"}]},{text:"Styled Components",level:2,hash:"styled-components",children:[{text:"\u6539\u53d8\u9ed8\u8ba4\u7684\u6837\u5f0f\u5f15\u64ce",level:3,hash:"change-the-default-styled-engine"},{text:"\u66f4\u6df1\u5c42\u7684\u5143\u7d20",level:3,hash:"deeper-elements-3"},{text:"\u4e3b\u9898",level:3,hash:"theme"},{text:"Portals\uff08\u4f20\u9001\u95e8\u7ec4\u4ef6\uff09",level:3,hash:"portals"}]},{text:"CSS Modules",level:2,hash:"css-modules",children:[{text:"CSS \u6ce8\u5165\u987a\u5e8f",level:3,hash:"css-injection-order-3"},{text:"\u66f4\u6df1\u5c42\u7684\u5143\u7d20",level:3,hash:"deeper-elements-4"}]},{text:"Emotion",level:2,hash:"emotion",children:[{text:"css \u5c5e\u6027",level:3,hash:"the-css-prop"},{text:"\u4e3b\u9898",level:3,hash:"theme-2"},{text:"styled(&#8203;) API",level:3,hash:"the-styled-api"}]}],title:"\u6837\u5f0f\u5e93\u7684\u4e92\u901a\u6027",headers:{components:[]}}},B={"pages/guides/interoperability/StyledComponents.js":{module:"./StyledComponents.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Slider from '@mui/material/Slider';\nimport Box from '@mui/material/Box';\n\nconst SliderCustomized = styled(Slider)`\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n`;\n\nexport default function StyledComponents() {\n  return (\n    <Box sx={{ width: 300 }}>\n      <Slider defaultValue={30} />\n      <SliderCustomized defaultValue={30} />\n    </Box>\n  );\n}\n",jsxPreview:"<Slider defaultValue={30} />\n<SliderCustomized defaultValue={30} />",moduleTS:"./StyledComponents.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Slider from '@mui/material/Slider';\nimport Box from '@mui/material/Box';\n\nconst SliderCustomized = styled(Slider)`\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n`;\n\nexport default function StyledComponents() {\n  return (\n    <Box sx={{ width: 300 }}>\n      <Slider defaultValue={30} />\n      <SliderCustomized defaultValue={30} />\n    </Box>\n  );\n}\n"},"pages/guides/interoperability/StyledComponentsTheme.js":{module:"./StyledComponentsTheme.js",raw:"import * as React from 'react';\nimport { createTheme, styled, ThemeProvider, darken } from '@mui/material/styles';\nimport Slider from '@mui/material/Slider';\nimport Box from '@mui/material/Box';\n\nconst customTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#20b2aa',\n    },\n  },\n});\n\nconst CustomizedSlider = styled(Slider)(\n  ({ theme }) => `\n  color: ${theme.palette.primary.main};\n\n  :hover {\n    color: ${darken(theme.palette.primary.main, 0.2)};\n  }\n`,\n);\n\nexport default function StyledComponentsTheme() {\n  return (\n    <Box sx={{ width: 300 }}>\n      <ThemeProvider theme={customTheme}>\n        <CustomizedSlider defaultValue={30} />\n      </ThemeProvider>\n    </Box>\n  );\n}\n",jsxPreview:"<ThemeProvider theme={customTheme}>\n  <CustomizedSlider defaultValue={30} />\n</ThemeProvider>",moduleTS:"./StyledComponentsTheme.js",rawTS:"import * as React from 'react';\nimport { createTheme, styled, ThemeProvider, darken } from '@mui/material/styles';\nimport Slider from '@mui/material/Slider';\nimport Box from '@mui/material/Box';\n\nconst customTheme = createTheme({\n  palette: {\n    primary: {\n      main: '#20b2aa',\n    },\n  },\n});\n\nconst CustomizedSlider = styled(Slider)(\n  ({ theme }) => `\n  color: ${theme.palette.primary.main};\n\n  :hover {\n    color: ${darken(theme.palette.primary.main, 0.2)};\n  }\n`,\n);\n\nexport default function StyledComponentsTheme() {\n  return (\n    <Box sx={{ width: 300 }}>\n      <ThemeProvider theme={customTheme}>\n        <CustomizedSlider defaultValue={30} />\n      </ThemeProvider>\n    </Box>\n  );\n}\n"},"pages/guides/interoperability/StyledComponentsPortal.js":{module:"./StyledComponentsPortal.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\n\nconst StyledTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))`\n  & .MuiTooltip-tooltip {\n    background: navy;\n  }\n`;\n\nexport default function StyledComponentsPortal() {\n  return (\n    <StyledTooltip title=\"I am navy\">\n      <Button variant=\"contained\" color=\"primary\">\n        Styled tooltip\n      </Button>\n    </StyledTooltip>\n  );\n}\n",jsxPreview:'<StyledTooltip title="I am navy">\n  <Button variant="contained" color="primary">\n    Styled tooltip\n  </Button>\n</StyledTooltip>',moduleTS:"./StyledComponentsPortal.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Tooltip, { TooltipProps } from '@mui/material/Tooltip';\n\nconst StyledTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))`\n  & .MuiTooltip-tooltip {\n    background: navy;\n  }\n`;\n\nexport default function StyledComponentsPortal() {\n  return (\n    <StyledTooltip title=\"I am navy\">\n      <Button variant=\"contained\" color=\"primary\">\n        Styled tooltip\n      </Button>\n    </StyledTooltip>\n  );\n}\n"},"pages/guides/interoperability/StyledComponentsDeep.js":{module:"./StyledComponentsDeep.js",raw:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Slider from '@mui/material/Slider';\nimport Box from '@mui/material/Box';\n\nconst CustomizedSlider = styled(Slider)`\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n\n  & .MuiSlider-thumb {\n    border-radius: 1px;\n  }\n`;\n\nexport default function StyledComponentsDeep() {\n  return (\n    <Box sx={{ width: 300 }}>\n      <Slider defaultValue={30} />\n      <CustomizedSlider defaultValue={30} />\n    </Box>\n  );\n}\n",jsxPreview:"<Slider defaultValue={30} />\n<CustomizedSlider defaultValue={30} />",moduleTS:"./StyledComponentsDeep.js",rawTS:"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Slider from '@mui/material/Slider';\nimport Box from '@mui/material/Box';\n\nconst CustomizedSlider = styled(Slider)`\n  color: #20b2aa;\n\n  :hover {\n    color: #2e8b57;\n  }\n\n  & .MuiSlider-thumb {\n    border-radius: 1px;\n  }\n`;\n\nexport default function StyledComponentsDeep() {\n  return (\n    <Box sx={{ width: 300 }}>\n      <Slider defaultValue={30} />\n      <CustomizedSlider defaultValue={30} />\n    </Box>\n  );\n}\n"},"pages/guides/interoperability/EmotionCSS.js":{module:"./EmotionCSS.js",raw:"/* eslint-disable react/react-in-jsx-scope -- Unaware of jsxImportSource */\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Slider from '@mui/material/Slider';\nimport Box from '@mui/material/Box';\n\nexport default function EmotionCSS() {\n  return (\n    <Box sx={{ width: 300 }}>\n      <Slider defaultValue={30} />\n      <Slider\n        defaultValue={30}\n        css={css`\n          color: #20b2aa;\n\n          :hover {\n            color: #2e8b57;\n          }\n        `}\n      />\n    </Box>\n  );\n}\n",jsxPreview:"<Slider defaultValue={30} />\n<Slider\n  defaultValue={30}\n  css={css`\n    color: #20b2aa;\n\n    :hover {\n      color: #2e8b57;\n    }\n  `}\n/>",moduleTS:"./EmotionCSS.js",rawTS:"/* eslint-disable react/react-in-jsx-scope -- Unaware of jsxImportSource */\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Slider from '@mui/material/Slider';\nimport Box from '@mui/material/Box';\n\nexport default function EmotionCSS() {\n  return (\n    <Box sx={{ width: 300 }}>\n      <Slider defaultValue={30} />\n      <Slider\n        defaultValue={30}\n        css={css`\n          color: #20b2aa;\n\n          :hover {\n            color: #2e8b57;\n          }\n        `}\n      />\n    </Box>\n  );\n}\n"}},A={"./StyledComponents.js":function(){return(0,u.jsxs)(r.Z,{sx:{width:300},children:[e||(e=(0,u.jsx)(i.ZP,{defaultValue:30})),p||(p=(0,u.jsx)(k,{defaultValue:30}))]})},"./StyledComponentsTheme.js":function(){return(0,u.jsx)(r.Z,{sx:{width:300},children:d||(d=(0,u.jsx)(h.Z,{theme:y,children:(0,u.jsx)(f,{defaultValue:30})}))})},"./StyledComponentsPortal.js":function(){return w||(w=(0,u.jsx)(T,{title:"I am navy",children:(0,u.jsx)(P.Z,{variant:"contained",color:"primary",children:"Styled tooltip"})}))},"./StyledComponentsDeep.js":function(){return(0,u.jsxs)(r.Z,{sx:{width:300},children:[S||(S=(0,u.jsx)(i.ZP,{defaultValue:30})),x||(x=(0,u.jsx)(D,{defaultValue:30}))]})},"./EmotionCSS.js":function(){return n=r.Z,s={sx:{width:300},children:[N||(N=z(i.ZP,{defaultValue:30})),z(i.ZP,{defaultValue:30,css:(0,U.iv)(V||(V=(0,c.Z)(["\n          color: #20b2aa;\n\n          :hover {\n            color: #2e8b57;\n          }\n        "])))})]},E.h.call(s,"css")?(0,u.jsxs)(E.E,(0,E.c)(n,s),a):(0,u.jsxs)(n,s,a);var n,s,a}};var G;function H(){return G||(G=(0,u.jsx)(o.Z,{demos:B,docs:R,demoComponents:A}))}},626322:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/guides/interoperability",function(){return a(728736)}])},309318:function(n,s,a){"use strict";function t(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}a.d(s,{Z:function(){return t}})},963504:function(n,s,a){"use strict";a.d(s,{Z:function(){return k}});var t=a(875499),e=a(128274),p=a(982055);function o(n){return(o=e?p:function(n){return n.__proto__||p(n)})(n)}var c=a(41281),l=a(950093);function i(n){return(i="function"===typeof c&&"symbol"===typeof l?function(n){return typeof n}:function(n){return n&&"function"===typeof c&&n.constructor===c&&n!==c.prototype?"symbol":typeof n})(n)}var r=a(309318);function u(n,s){if(s&&("object"===i(s)||"function"===typeof s))return s;if(void 0!==s)throw new TypeError("Derived constructors may only return object or undefined");return(0,r.Z)(n)}function k(n){var s=function(){if("undefined"===typeof Reflect||!t)return!1;if(t.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(t(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var a,e=o(n);if(s){var p=o(this).constructor;a=t(e,arguments,p)}else a=e.apply(this,arguments);return u(this,a)}}},858748:function(n,s,a){"use strict";a.d(s,{Z:function(){return o}});var t=a(38401),e=a(128274);function p(n,s){return(p=e||function(n,s){return n.__proto__=s,n})(n,s)}function o(n,s){if("function"!==typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");n.prototype=t(s&&s.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),s&&p(n,s)}}},function(n){n.O(0,[1622,8622,8272,5408,6950,1895,1353,7423,2245,2790,4921,8662,9596,994,5505,2853,274,7506,7418,521,7436,9774,2888,179],(function(){return s=626322,n(n.s=s);var s}));var s=n.O();_N_E=s}]);